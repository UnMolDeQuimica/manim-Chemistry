import pytest
import os

import numpy as np

base_files_path = os.path.join("examples", "molecule_files", "asnt_files")


class BaseTestASNTParser:
    acetone_2d = os.path.join(base_files_path, "acetone_2d.asnt")
    acetone_3d = os.path.join(base_files_path, "acetone_3d.asnt")
    morphine_2d = os.path.join(base_files_path, "morphine_2d.asnt")
    morphine_3d = os.path.join(base_files_path, "morphine_3d.asnt")
    heme_2d = os.path.join(base_files_path, "heme_2d.asnt")
    heme_3d = os.path.join(base_files_path, "heme_3d.asnt")

    @pytest.fixture
    def acetone_2d_file_data(self):
        return [
            "PC-Compounds ::= {\n",
            "  {\n",
            "    id {\n",
            "      id cid 180\n",
            "    },\n",
            "    atoms {\n",
            "      aid {\n",
            "        1,\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10\n",
            "      },\n",
            "      element {\n",
            "        o,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h\n",
            "      }\n",
            "    },\n",
            "    bonds {\n",
            "      aid1 {\n",
            "        1,\n",
            "        2,\n",
            "        2,\n",
            "        3,\n",
            "        3,\n",
            "        3,\n",
            "        4,\n",
            "        4,\n",
            "        4\n",
            "      },\n",
            "      aid2 {\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10\n",
            "      },\n",
            "      order {\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single\n",
            "      }\n",
            "    },\n",
            "    coords {\n",
            "      {\n",
            "        type {\n",
            "          twod,\n",
            "          computed,\n",
            "          units-unknown\n",
            "        },\n",
            "        aid {\n",
            "          1,\n",
            "          2,\n",
            "          3,\n",
            "          4,\n",
            "          5,\n",
            "          6,\n",
            "          7,\n",
            "          8,\n",
            "          9,\n",
            "          10\n",
            "        },\n",
            "        conformers {\n",
            "          {\n",
            "            x {\n",
            "              { 3732, 10, -3 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 2, 10, 0 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 231, 10, -2 },\n",
            "              { 14631, 10, -4 },\n",
            "              { 169, 10, -2 },\n",
            "              { 2246, 10, -3 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 3486, 10, -3 }\n",
            "            },\n",
            "            y {\n",
            "              { 75, 10, -2 },\n",
            "              { 25, 10, -2 },\n",
            "              { 75, 10, -2 },\n",
            "              { -75, 10, -2 },\n",
            "              { 12869, 10, -4 },\n",
            "              { 106, 10, -2 },\n",
            "              { 2131, 10, -4 },\n",
            "              { -75, 10, -2 },\n",
            "              { -137, 10, -2 },\n",
            "              { -75, 10, -2 }\n",
            "            }\n",
            "          }\n",
            "        }\n",
            "      }\n",
            "    },\n",
            "    charge 0,\n",
            "    props {\n",
            "      {\n",
            "        urn {\n",
            '          label "Compound",\n',
            '          name "Canonicalized",\n',
            "          datatype uint,\n",
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 1\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Compound Complexity",\n',
            "          datatype double,\n",
            '          implementation "E_COMPLEXITY",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value fval { 263, 10, -1 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Hydrogen Bond Acceptor",\n',
            "          datatype uint,\n",
            '          implementation "E_NHACCEPTORS",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 1\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Hydrogen Bond Donor",\n',
            "          datatype uint,\n",
            '          implementation "E_NHDONORS",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 0\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Rotatable Bond",\n',
            "          datatype uint,\n",
            '          implementation "E_NROTBONDS",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 0\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Fingerprint",\n',
            '          name "SubStructure Keys",\n',
            "          datatype fingerprint,\n",
            '          parameters "extended 2",\n',
            '          implementation "E_SCREEN",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value binary '00000371804020000000000000000000000000000000000000000000\n",
            "00000000000000000000001A000000000008048080000200000000000800801000000000000000\n",
            "000000000000000000000000000000000000000000000000000000000000000000000000000000\n",
            "000000000000000000'H\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Allowed",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "acetone"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "CAS-like Style",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "2-propanone"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Markup",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "propan-2-one"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Preferred",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "propan-2-one"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Systematic",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "propan-2-one"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Traditional",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "acetone"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "InChI",\n',
            '          name "Standard",\n',
            "          datatype string,\n",
            '          version "1.0.6",\n',
            '          software "InChI",\n',
            '          source "iupac.org",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "InChI=1S/C3H6O/c1-3(2)4/h1-2H3"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "InChIKey",\n',
            '          name "Standard",\n',
            "          datatype string,\n",
            '          version "1.0.6",\n',
            '          software "InChI",\n',
            '          source "iupac.org",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "CSCPPACGZOOCGX-UHFFFAOYSA-N"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Log P",\n',
            '          name "XLogP3-AA",\n',
            "          datatype double,\n",
            '          version "3.0",\n',
            '          source "sioc-ccbg.ac.cn",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value fval { -1, 10, -1 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Mass",\n',
            '          name "Exact",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "58.041864811"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Molecular Formula",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "C3H6O"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Molecular Weight",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "58.08"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "SMILES",\n',
            '          name "Absolute",\n',
            "          datatype string,\n",
            '          version "2.3.0",\n',
            '          software "OEChem",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2024.12.12"\n',
            "        },\n",
            '        value sval "CC(=O)C"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "SMILES",\n',
            '          name "Canonical",\n',
            "          datatype string,\n",
            '          version "2.3.0",\n',
            '          software "OEChem",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "CC(=O)C"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "SMILES",\n',
            '          name "Isomeric",\n',
            "          datatype string,\n",
            '          version "2.3.0",\n',
            '          software "OEChem",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "CC(=O)C"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Topological",\n',
            '          name "Polar Surface Area",\n',
            "          datatype double,\n",
            '          implementation "E_TPSA",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value fval { 171, 10, -1 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Weight",\n',
            '          name "MonoIsotopic",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "58.041864811"\n',
            "      }\n",
            "    },\n",
            "    count {\n",
            "      heavy-atom 4,\n",
            "      atom-chiral 0,\n",
            "      atom-chiral-def 0,\n",
            "      atom-chiral-undef 0,\n",
            "      bond-chiral 0,\n",
            "      bond-chiral-def 0,\n",
            "      bond-chiral-undef 0,\n",
            "      isotope-atom 0,\n",
            "      covalent-unit 1,\n",
            "      tautomers -1\n",
            "    }\n",
            "  }\n",
            "}\n",
        ]

    @pytest.fixture
    def acetone_3d_file_data(self):
        return [
            "PC-Compounds ::= {\n",
            "  {\n",
            "    id {\n",
            "      id cid 180\n",
            "    },\n",
            "    atoms {\n",
            "      aid {\n",
            "        1,\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10\n",
            "      },\n",
            "      element {\n",
            "        o,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h\n",
            "      }\n",
            "    },\n",
            "    bonds {\n",
            "      aid1 {\n",
            "        1,\n",
            "        2,\n",
            "        2,\n",
            "        3,\n",
            "        3,\n",
            "        3,\n",
            "        4,\n",
            "        4,\n",
            "        4\n",
            "      },\n",
            "      aid2 {\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10\n",
            "      },\n",
            "      order {\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single\n",
            "      }\n",
            "    },\n",
            "    coords {\n",
            "      {\n",
            "        type {\n",
            "          threed,\n",
            "          computed,\n",
            "          units-angstroms\n",
            "        },\n",
            "        aid {\n",
            "          1,\n",
            "          2,\n",
            "          3,\n",
            "          4,\n",
            "          5,\n",
            "          6,\n",
            "          7,\n",
            "          8,\n",
            "          9,\n",
            "          10\n",
            "        },\n",
            "        conformers {\n",
            "          {\n",
            "            x {\n",
            "              { 3, 10, -4 },\n",
            "              { 0, 10, 0 },\n",
            "              { 1281, 10, -3 },\n",
            "              { -12813, 10, -4 },\n",
            "              { 13279, 10, -4 },\n",
            "              { 1326, 10, -3 },\n",
            "              { 21351, 10, -4 },\n",
            "              { -21352, 10, -4 },\n",
            "              { -13284, 10, -4 },\n",
            "              { -13266, 10, -4 }\n",
            "            },\n",
            "            y {\n",
            "              { -13171, 10, -4 },\n",
            "              { -872, 10, -4 },\n",
            "              { 7024, 10, -4 },\n",
            "              { 7019, 10, -4 },\n",
            "              { 13235, 10, -4 },\n",
            "              { 13282, 10, -4 },\n",
            "              { 196, 10, -4 },\n",
            "              { 187, 10, -4 },\n",
            "              { 1323, 10, -3 },\n",
            "              { 13278, 10, -4 }\n",
            "            },\n",
            "            z {\n",
            "              { -2, 10, -4 },\n",
            "              { 6, 10, -4 },\n",
            "              { -2, 10, -4 },\n",
            "              { -2, 10, -4 },\n",
            "              { -898, 10, -3 },\n",
            "              { 8945, 10, -4 },\n",
            "              { 27, 10, -4 },\n",
            "              { 27, 10, -4 },\n",
            "              { -898, 10, -3 },\n",
            "              { 8945, 10, -4 }\n",
            "            },\n",
            "            data {\n",
            "              {\n",
            "                urn {\n",
            '                  label "Conformer",\n',
            '                  name "ID",\n',
            "                  datatype uint64,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2009.12.11"\n',
            "                },\n",
            '                value sval "000000B400000001"\n',
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Energy",\n',
            '                  name "MMFF94 NoEstat",\n',
            "                  datatype double,\n",
            '                  version "1.6.0",\n',
            '                  software "Szybki",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 16523, 10, -4 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Feature",\n',
            '                  name "Self Overlap",\n',
            "                  datatype double,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 5074, 10, -3 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Fingerprint",\n',
            '                  name "Shape",\n',
            "                  datatype stringlist,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value slist {\n",
            '                  "139733 1 9290717673991302211",\n',
            '                  "20096714 4 18411138026090193976",\n',
            '                  "21015797 1 9007056889502236007",\n',
            '                  "5943 1 13610069792663804549"\n',
            "                }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Multipoles",\n',
            "                  datatype doublevec,\n",
            '                  version "1.8.1",\n',
            '                  software "OEShape",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fvec {\n",
            "                  { 7645, 10, -2 },\n",
            "                  { 148, 10, -2 },\n",
            "                  { 118, 10, -2 },\n",
            "                  { 59, 10, -2 },\n",
            "                  { 0, 10, 0 },\n",
            "                  { 33, 10, -2 },\n",
            "                  { 0, 10, 0 },\n",
            "                  { -56, 10, -2 },\n",
            "                  { 0, 10, 0 },\n",
            "                  { 0, 10, 0 },\n",
            "                  { 0, 10, 0 },\n",
            "                  { 0, 10, 0 },\n",
            "                  { -3, 10, -2 },\n",
            "                  { 0, 10, 0 }\n",
            "                }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Self Overlap",\n',
            "                  datatype double,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 128735, 10, -3 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Volume",\n',
            "                  datatype double,\n",
            '                  version "1.8.1",\n',
            '                  software "OEShape",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 528, 10, -1 }\n",
            "              }\n",
            "            }\n",
            "          }\n",
            "        },\n",
            "        data {\n",
            "          {\n",
            "            urn {\n",
            '              label "Conformer",\n',
            '              name "RMSD",\n',
            "              datatype double,\n",
            '              release "2009.12.11"\n',
            "            },\n",
            "            value fval { 4, 10, -1 }\n",
            "          },\n",
            "          {\n",
            "            urn {\n",
            '              label "Diverse Conformer",\n',
            '              name "ID List",\n',
            "              datatype uintvec,\n",
            '              release "2010.05.05"\n',
            "            },\n",
            "            value ivec {\n",
            "              1\n",
            "            }\n",
            "          }\n",
            "        }\n",
            "      }\n",
            "    },\n",
            "    props {\n",
            "      {\n",
            "        urn {\n",
            '          label "Charge",\n',
            '          name "MMFF94 Partial",\n',
            "          datatype stringlist,\n",
            '          version "1.9.0",\n',
            '          software "OEChem",\n',
            '          source "openeye.com",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value slist {\n",
            '          "4",\n',
            '          "1 -0.57",\n',
            '          "2 0.45",\n',
            '          "3 0.06",\n',
            '          "4 0.06"\n',
            "        }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Effective Rotor",\n',
            "          datatype double,\n",
            '          version "1.7.6",\n',
            '          software "OEChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2012.01.18"\n',
            "        },\n",
            "        value fval { 0, 10, 0 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Features",\n',
            '          name "Pharmacophore",\n',
            "          datatype stringlist,\n",
            '          parameters "ImplicitMillsDean merged",\n',
            '          version "1.8.3",\n',
            '          software "OEShape",\n',
            '          source "openeye.com",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value slist {\n",
            '          "1",\n',
            '          "1 1 acceptor"\n',
            "        }\n",
            "      }\n",
            "    },\n",
            "    count {\n",
            "      heavy-atom 4,\n",
            "      atom-chiral 0,\n",
            "      atom-chiral-def 0,\n",
            "      atom-chiral-undef 0,\n",
            "      bond-chiral 0,\n",
            "      bond-chiral-def 0,\n",
            "      bond-chiral-undef 0,\n",
            "      isotope-atom 0,\n",
            "      covalent-unit 1,\n",
            "      tautomers 2\n",
            "    }\n",
            "  }\n",
            "}\n",
        ]

    @pytest.fixture
    def morphine_2d_file_data(self):
        return [
            "PC-Compounds ::= {\n",
            "  {\n",
            "    id {\n",
            "      id cid 5288826\n",
            "    },\n",
            "    atoms {\n",
            "      aid {\n",
            "        1,\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10,\n",
            "        11,\n",
            "        12,\n",
            "        13,\n",
            "        14,\n",
            "        15,\n",
            "        16,\n",
            "        17,\n",
            "        18,\n",
            "        19,\n",
            "        20,\n",
            "        21,\n",
            "        22,\n",
            "        23,\n",
            "        24,\n",
            "        25,\n",
            "        26,\n",
            "        27,\n",
            "        28,\n",
            "        29,\n",
            "        30,\n",
            "        31,\n",
            "        32,\n",
            "        33,\n",
            "        34,\n",
            "        35,\n",
            "        36,\n",
            "        37,\n",
            "        38,\n",
            "        39,\n",
            "        40\n",
            "      },\n",
            "      element {\n",
            "        o,\n",
            "        o,\n",
            "        o,\n",
            "        n,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h\n",
            "      }\n",
            "    },\n",
            "    bonds {\n",
            "      aid1 {\n",
            "        1,\n",
            "        1,\n",
            "        2,\n",
            "        2,\n",
            "        3,\n",
            "        3,\n",
            "        4,\n",
            "        4,\n",
            "        4,\n",
            "        5,\n",
            "        5,\n",
            "        5,\n",
            "        5,\n",
            "        6,\n",
            "        6,\n",
            "        6,\n",
            "        7,\n",
            "        7,\n",
            "        8,\n",
            "        8,\n",
            "        9,\n",
            "        9,\n",
            "        9,\n",
            "        10,\n",
            "        10,\n",
            "        11,\n",
            "        11,\n",
            "        11,\n",
            "        12,\n",
            "        12,\n",
            "        13,\n",
            "        14,\n",
            "        14,\n",
            "        15,\n",
            "        15,\n",
            "        16,\n",
            "        17,\n",
            "        18,\n",
            "        18,\n",
            "        18,\n",
            "        19,\n",
            "        19,\n",
            "        20,\n",
            "        21\n",
            "      },\n",
            "      aid2 {\n",
            "        8,\n",
            "        16,\n",
            "        14,\n",
            "        39,\n",
            "        20,\n",
            "        40,\n",
            "        7,\n",
            "        12,\n",
            "        18,\n",
            "        6,\n",
            "        8,\n",
            "        9,\n",
            "        10,\n",
            "        7,\n",
            "        15,\n",
            "        22,\n",
            "        11,\n",
            "        23,\n",
            "        14,\n",
            "        24,\n",
            "        12,\n",
            "        25,\n",
            "        26,\n",
            "        13,\n",
            "        16,\n",
            "        13,\n",
            "        27,\n",
            "        28,\n",
            "        29,\n",
            "        30,\n",
            "        19,\n",
            "        17,\n",
            "        31,\n",
            "        17,\n",
            "        32,\n",
            "        20,\n",
            "        33,\n",
            "        34,\n",
            "        35,\n",
            "        36,\n",
            "        21,\n",
            "        37,\n",
            "        21,\n",
            "        38\n",
            "      },\n",
            "      order {\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single\n",
            "      }\n",
            "    },\n",
            "    stereo {\n",
            "      tetrahedral {\n",
            "        center 5,\n",
            "        above 6,\n",
            "        top 8,\n",
            "        bottom 9,\n",
            "        below 10,\n",
            "        parity clockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 6,\n",
            "        above 5,\n",
            "        top 15,\n",
            "        bottom 7,\n",
            "        below 22,\n",
            "        parity counterclockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 7,\n",
            "        above 4,\n",
            "        top 6,\n",
            "        bottom 11,\n",
            "        below 23,\n",
            "        parity clockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 8,\n",
            "        above 1,\n",
            "        top 14,\n",
            "        bottom 5,\n",
            "        below 24,\n",
            "        parity counterclockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 14,\n",
            "        above 2,\n",
            "        top 17,\n",
            "        bottom 8,\n",
            "        below 31,\n",
            "        parity counterclockwise,\n",
            "        type tetrahedral\n",
            "      }\n",
            "    },\n",
            "    coords {\n",
            "      {\n",
            "        type {\n",
            "          twod,\n",
            "          computed,\n",
            "          units-unknown\n",
            "        },\n",
            "        aid {\n",
            "          1,\n",
            "          2,\n",
            "          3,\n",
            "          4,\n",
            "          5,\n",
            "          6,\n",
            "          7,\n",
            "          8,\n",
            "          9,\n",
            "          10,\n",
            "          11,\n",
            "          12,\n",
            "          13,\n",
            "          14,\n",
            "          15,\n",
            "          16,\n",
            "          17,\n",
            "          18,\n",
            "          19,\n",
            "          20,\n",
            "          21,\n",
            "          22,\n",
            "          23,\n",
            "          24,\n",
            "          25,\n",
            "          26,\n",
            "          27,\n",
            "          28,\n",
            "          29,\n",
            "          30,\n",
            "          31,\n",
            "          32,\n",
            "          33,\n",
            "          34,\n",
            "          35,\n",
            "          36,\n",
            "          37,\n",
            "          38,\n",
            "          39,\n",
            "          40\n",
            "        },\n",
            "        conformers {\n",
            "          {\n",
            "            x {\n",
            "              { 22314, 10, -4 },\n",
            "              { 2, 10, 0 },\n",
            "              { 2, 10, 0 },\n",
            "              { 61607, 10, -4 },\n",
            "              { 36897, 10, -4 },\n",
            "              { 45133, 10, -4 },\n",
            "              { 5337, 10, -3 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 42392, 10, -4 },\n",
            "              { 36897, 10, -4 },\n",
            "              { 5337, 10, -3 },\n",
            "              { 55918, 10, -4 },\n",
            "              { 45133, 10, -4 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 45133, 10, -4 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 36897, 10, -4 },\n",
            "              { 68418, 10, -4 },\n",
            "              { 45133, 10, -4 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 36897, 10, -4 },\n",
            "              { 50597, 10, -4 },\n",
            "              { 56284, 10, -4 },\n",
            "              { 20496, 10, -4 },\n",
            "              { 4376, 10, -3 },\n",
            "              { 36795, 10, -4 },\n",
            "              { 59476, 10, -4 },\n",
            "              { 5549, 10, -3 },\n",
            "              { 6184, 10, -3 },\n",
            "              { 54989, 10, -4 },\n",
            "              { 2866, 10, -3 },\n",
            "              { 50503, 10, -4 },\n",
            "              { 36897, 10, -4 },\n",
            "              { 63879, 10, -4 },\n",
            "              { 72641, 10, -4 },\n",
            "              { 72957, 10, -4 },\n",
            "              { 50503, 10, -4 },\n",
            "              { 36897, 10, -4 },\n",
            "              { 2, 10, 0 },\n",
            "              { 2, 10, 0 }\n",
            "            },\n",
            "            y {\n",
            "              { 528, 10, -4 },\n",
            "              { -24021, 10, -4 },\n",
            "              { 24021, 10, -4 },\n",
            "              { -9511, 10, -4 },\n",
            "              { -4755, 10, -4 },\n",
            "              { -9511, 10, -4 },\n",
            "              { -4755, 10, -4 },\n",
            "              { -9511, 10, -4 },\n",
            "              { 2219, 10, -4 },\n",
            "              { 4755, 10, -4 },\n",
            "              { 4755, 10, -4 },\n",
            "              { 2219, 10, -4 },\n",
            "              { 9511, 10, -4 },\n",
            "              { -19022, 10, -4 },\n",
            "              { -19022, 10, -4 },\n",
            "              { 9511, 10, -4 },\n",
            "              { -23777, 10, -4 },\n",
            "              { -16832, 10, -4 },\n",
            "              { 19022, 10, -4 },\n",
            "              { 19022, 10, -4 },\n",
            "              { 23777, 10, -4 },\n",
            "              { -16022, 10, -4 },\n",
            "              { -1274, 10, -3 },\n",
            "              { -11875, 10, -4 },\n",
            "              { 8266, 10, -4 },\n",
            "              { 4887, 10, -4 },\n",
            "              { 3679, 10, -4 },\n",
            "              { 10581, 10, -4 },\n",
            "              { 4057, 10, -4 },\n",
            "              { 8349, 10, -4 },\n",
            "              { -25222, 10, -4 },\n",
            "              { -22122, 10, -4 },\n",
            "              { -29977, 10, -4 },\n",
            "              { -21055, 10, -4 },\n",
            "              { -21371, 10, -4 },\n",
            "              { -12609, 10, -4 },\n",
            "              { 22122, 10, -4 },\n",
            "              { 29977, 10, -4 },\n",
            "              { -30222, 10, -4 },\n",
            "              { 30222, 10, -4 }\n",
            "            },\n",
            "            style {\n",
            "              annotation {\n",
            "                wedge-up,\n",
            "                wedge-up,\n",
            "                wedge-down,\n",
            "                wedge-up,\n",
            "                aromatic,\n",
            "                aromatic,\n",
            "                aromatic,\n",
            "                wedge-down,\n",
            "                aromatic,\n",
            "                aromatic,\n",
            "                aromatic\n",
            "              },\n",
            "              aid1 {\n",
            "                5,\n",
            "                6,\n",
            "                7,\n",
            "                8,\n",
            "                10,\n",
            "                10,\n",
            "                13,\n",
            "                14,\n",
            "                16,\n",
            "                19,\n",
            "                20\n",
            "              },\n",
            "              aid2 {\n",
            "                9,\n",
            "                22,\n",
            "                23,\n",
            "                24,\n",
            "                13,\n",
            "                16,\n",
            "                19,\n",
            "                2,\n",
            "                20,\n",
            "                21,\n",
            "                21\n",
            "              }\n",
            "            }\n",
            "          }\n",
            "        }\n",
            "      }\n",
            "    },\n",
            "    charge 0,\n",
            "    props {\n",
            "      {\n",
            "        urn {\n",
            '          label "Compound",\n',
            '          name "Canonicalized",\n',
            "          datatype uint,\n",
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 1\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Compound Complexity",\n',
            "          datatype double,\n",
            '          implementation "E_COMPLEXITY",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value fval { 494, 10, 0 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Hydrogen Bond Acceptor",\n',
            "          datatype uint,\n",
            '          implementation "E_NHACCEPTORS",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 4\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Hydrogen Bond Donor",\n',
            "          datatype uint,\n",
            '          implementation "E_NHDONORS",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 2\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Rotatable Bond",\n',
            "          datatype uint,\n",
            '          implementation "E_NROTBONDS",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value ival 0\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Fingerprint",\n',
            '          name "SubStructure Keys",\n',
            "          datatype fingerprint,\n",
            '          parameters "extended 2",\n',
            '          implementation "E_SCREEN",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value binary '00000371E07A30000000000000000000000000000001200000003C60\n",
            "81000000160048C10000001E00000800000F3CE198063206830006008002204200000208002020\n",
            "000888000E88880D362286B11B867823A4C0118BB807B0F0F70FA000010000184000D000068000\n",
            "348000000000000000'H\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Allowed",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "(4R,4aR,7S,7aR,12bS)-3-methyl-2,4,4a,7,7a,13-hexahydro-1H-\n',
            '4,12-methanobenzofuro[3,2-e]isoquinoline-7,9-diol"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "CAS-like Style",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "(4R,4aR,7S,7aR,12bS)-3-methyl-2,4,4a,7,7a,13-hexahydro-1H-\n',
            '4,12-methanobenzofuro[3,2-e]isoquinoline-7,9-diol"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Markup",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "(4<I>R</I>,4<I>a</I><I>R</I>,7<I>S</I>,7<I>a</I><I>R</I>,1\n',
            "2<I>b</I><I>S</I>)-3-methyl-2,4,4<I>a</I>,7,7<I>a</I>,13-hexahydro-1<I>H</I>-4\n",
            ',12-methanobenzofuro[3,2-e]isoquinoline-7,9-diol"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Preferred",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "(4R,4aR,7S,7aR,12bS)-3-methyl-2,4,4a,7,7a,13-hexahydro-1H-\n',
            '4,12-methanobenzofuro[3,2-e]isoquinoline-7,9-diol"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Systematic",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "(4R,4aR,7S,7aR,12bS)-3-methyl-2,4,4a,7,7a,13-hexahydro-1H-\n',
            '4,12-methanobenzofuro[3,2-e]isoquinoline-7,9-diol"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "IUPAC Name",\n',
            '          name "Traditional",\n',
            "          datatype string,\n",
            '          version "2.7.0",\n',
            '          software "Lexichem TK",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "(4R,4aR,7S,7aR,12bS)-3-methyl-2,4,4a,7,7a,13-hexahydro-1H-\n',
            '4,12-methanobenzofuro[3,2-e]isoquinoline-7,9-diol"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "InChI",\n',
            '          name "Standard",\n',
            "          datatype string,\n",
            '          version "1.0.6",\n',
            '          software "InChI",\n',
            '          source "iupac.org",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "InChI=1S/C17H19NO3/c1-18-7-6-17-10-3-5-13(20)16(17)21-15-1\n',
            "2(19)4-2-9(14(15)17)8-11(10)18/h2-5,10-11,13,16,19-20H,6-8H2,1H3/t10-,11+,13-,\n",
            '16-,17-/m0/s1"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "InChIKey",\n',
            '          name "Standard",\n',
            "          datatype string,\n",
            '          version "1.0.6",\n',
            '          software "InChI",\n',
            '          source "iupac.org",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "BQJCRHHNABKAKU-KBQPJGBKSA-N"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Log P",\n',
            '          name "XLogP3",\n',
            "          datatype double,\n",
            '          version "3.0",\n',
            '          source "sioc-ccbg.ac.cn",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value fval { 8, 10, -1 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Mass",\n',
            '          name "Exact",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "285.13649347"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Molecular Formula",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "C17H19NO3"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Molecular Weight",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "285.34"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "SMILES",\n',
            '          name "Absolute",\n',
            "          datatype string,\n",
            '          version "2.3.0",\n',
            '          software "OEChem",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2024.12.12"\n',
            "        },\n",
            '        value sval "CN1CC[C@]23[C@@H]4[C@H]1CC5=C2C(=C(C=C5)O)O[C@H]3[C@H](C=C\n',
            '4)O"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "SMILES",\n',
            '          name "Canonical",\n',
            "          datatype string,\n",
            '          version "2.3.0",\n',
            '          software "OEChem",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "CN1CCC23C4C1CC5=C2C(=C(C=C5)O)OC3C(C=C4)O"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "SMILES",\n',
            '          name "Isomeric",\n',
            "          datatype string,\n",
            '          version "2.3.0",\n',
            '          software "OEChem",\n',
            '          source "OpenEye Scientific Software",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "CN1CC[C@]23[C@@H]4[C@H]1CC5=C2C(=C(C=C5)O)O[C@H]3[C@H](C=C\n',
            '4)O"\n',
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Topological",\n',
            '          name "Polar Surface Area",\n',
            "          datatype double,\n",
            '          implementation "E_TPSA",\n',
            '          version "3.4.8.18",\n',
            '          software "Cactvs",\n',
            '          source "Xemistry GmbH",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            "        value fval { 529, 10, -1 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Weight",\n',
            '          name "MonoIsotopic",\n',
            "          datatype string,\n",
            '          version "2.2",\n',
            '          software "PubChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2021.10.14"\n',
            "        },\n",
            '        value sval "285.13649347"\n',
            "      }\n",
            "    },\n",
            "    count {\n",
            "      heavy-atom 21,\n",
            "      atom-chiral 5,\n",
            "      atom-chiral-def 5,\n",
            "      atom-chiral-undef 0,\n",
            "      bond-chiral 0,\n",
            "      bond-chiral-def 0,\n",
            "      bond-chiral-undef 0,\n",
            "      isotope-atom 0,\n",
            "      covalent-unit 1,\n",
            "      tautomers -1\n",
            "    }\n",
            "  }\n",
            "}\n",
        ]

    @pytest.fixture
    def morphine_3d_file_data(self):
        return [
            "PC-Compounds ::= {\n",
            "  {\n",
            "    id {\n",
            "      id cid 5288826\n",
            "    },\n",
            "    atoms {\n",
            "      aid {\n",
            "        1,\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10,\n",
            "        11,\n",
            "        12,\n",
            "        13,\n",
            "        14,\n",
            "        15,\n",
            "        16,\n",
            "        17,\n",
            "        18,\n",
            "        19,\n",
            "        20,\n",
            "        21,\n",
            "        22,\n",
            "        23,\n",
            "        24,\n",
            "        25,\n",
            "        26,\n",
            "        27,\n",
            "        28,\n",
            "        29,\n",
            "        30,\n",
            "        31,\n",
            "        32,\n",
            "        33,\n",
            "        34,\n",
            "        35,\n",
            "        36,\n",
            "        37,\n",
            "        38,\n",
            "        39,\n",
            "        40\n",
            "      },\n",
            "      element {\n",
            "        o,\n",
            "        o,\n",
            "        o,\n",
            "        n,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h\n",
            "      }\n",
            "    },\n",
            "    bonds {\n",
            "      aid1 {\n",
            "        1,\n",
            "        1,\n",
            "        2,\n",
            "        2,\n",
            "        3,\n",
            "        3,\n",
            "        4,\n",
            "        4,\n",
            "        4,\n",
            "        5,\n",
            "        5,\n",
            "        5,\n",
            "        5,\n",
            "        6,\n",
            "        6,\n",
            "        6,\n",
            "        7,\n",
            "        7,\n",
            "        8,\n",
            "        8,\n",
            "        9,\n",
            "        9,\n",
            "        9,\n",
            "        10,\n",
            "        10,\n",
            "        11,\n",
            "        11,\n",
            "        11,\n",
            "        12,\n",
            "        12,\n",
            "        13,\n",
            "        14,\n",
            "        14,\n",
            "        15,\n",
            "        15,\n",
            "        16,\n",
            "        17,\n",
            "        18,\n",
            "        18,\n",
            "        18,\n",
            "        19,\n",
            "        19,\n",
            "        20,\n",
            "        21\n",
            "      },\n",
            "      aid2 {\n",
            "        8,\n",
            "        16,\n",
            "        14,\n",
            "        39,\n",
            "        20,\n",
            "        40,\n",
            "        7,\n",
            "        12,\n",
            "        18,\n",
            "        6,\n",
            "        8,\n",
            "        9,\n",
            "        10,\n",
            "        7,\n",
            "        15,\n",
            "        22,\n",
            "        11,\n",
            "        23,\n",
            "        14,\n",
            "        24,\n",
            "        12,\n",
            "        25,\n",
            "        26,\n",
            "        13,\n",
            "        16,\n",
            "        13,\n",
            "        27,\n",
            "        28,\n",
            "        29,\n",
            "        30,\n",
            "        19,\n",
            "        17,\n",
            "        31,\n",
            "        17,\n",
            "        32,\n",
            "        20,\n",
            "        33,\n",
            "        34,\n",
            "        35,\n",
            "        36,\n",
            "        21,\n",
            "        37,\n",
            "        21,\n",
            "        38\n",
            "      },\n",
            "      order {\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single\n",
            "      }\n",
            "    },\n",
            "    stereo {\n",
            "      tetrahedral {\n",
            "        center 5,\n",
            "        above 6,\n",
            "        top 8,\n",
            "        bottom 9,\n",
            "        below 10,\n",
            "        parity clockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 6,\n",
            "        above 5,\n",
            "        top 15,\n",
            "        bottom 7,\n",
            "        below 22,\n",
            "        parity counterclockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 7,\n",
            "        above 4,\n",
            "        top 6,\n",
            "        bottom 11,\n",
            "        below 23,\n",
            "        parity clockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 8,\n",
            "        above 1,\n",
            "        top 14,\n",
            "        bottom 5,\n",
            "        below 24,\n",
            "        parity counterclockwise,\n",
            "        type tetrahedral\n",
            "      },\n",
            "      tetrahedral {\n",
            "        center 14,\n",
            "        above 2,\n",
            "        top 17,\n",
            "        bottom 8,\n",
            "        below 31,\n",
            "        parity counterclockwise,\n",
            "        type tetrahedral\n",
            "      }\n",
            "    },\n",
            "    coords {\n",
            "      {\n",
            "        type {\n",
            "          threed,\n",
            "          computed,\n",
            "          units-angstroms\n",
            "        },\n",
            "        aid {\n",
            "          1,\n",
            "          2,\n",
            "          3,\n",
            "          4,\n",
            "          5,\n",
            "          6,\n",
            "          7,\n",
            "          8,\n",
            "          9,\n",
            "          10,\n",
            "          11,\n",
            "          12,\n",
            "          13,\n",
            "          14,\n",
            "          15,\n",
            "          16,\n",
            "          17,\n",
            "          18,\n",
            "          19,\n",
            "          20,\n",
            "          21,\n",
            "          22,\n",
            "          23,\n",
            "          24,\n",
            "          25,\n",
            "          26,\n",
            "          27,\n",
            "          28,\n",
            "          29,\n",
            "          30,\n",
            "          31,\n",
            "          32,\n",
            "          33,\n",
            "          34,\n",
            "          35,\n",
            "          36,\n",
            "          37,\n",
            "          38,\n",
            "          39,\n",
            "          40\n",
            "        },\n",
            "        conformers {\n",
            "          {\n",
            "            x {\n",
            "              { -1993, 10, -3 },\n",
            "              { -27826, 10, -4 },\n",
            "              { -3622, 10, -3 },\n",
            "              { 31777, 10, -4 },\n",
            "              { 3699, 10, -4 },\n",
            "              { 12913, 10, -4 },\n",
            "              { 23441, 10, -4 },\n",
            "              { -9377, 10, -4 },\n",
            "              { 11988, 10, -4 },\n",
            "              { -2516, 10, -4 },\n",
            "              { 16887, 10, -4 },\n",
            "              { 24315, 10, -4 },\n",
            "              { 3384, 10, -4 },\n",
            "              { -13631, 10, -4 },\n",
            "              { 5066, 10, -4 },\n",
            "              { -15672, 10, -4 },\n",
            "              { -7155, 10, -4 },\n",
            "              { 43733, 10, -4 },\n",
            "              { -4184, 10, -4 },\n",
            "              { -2331, 10, -3 },\n",
            "              { -17382, 10, -4 },\n",
            "              { 18278, 10, -4 },\n",
            "              { 30029, 10, -4 },\n",
            "              { -8451, 10, -4 },\n",
            "              { 15366, 10, -4 },\n",
            "              { 5899, 10, -4 },\n",
            "              { 15474, 10, -4 },\n",
            "              { 2353, 10, -3 },\n",
            "              { 21271, 10, -4 },\n",
            "              { 30801, 10, -4 },\n",
            "              { -10772, 10, -4 },\n",
            "              { 9601, 10, -4 },\n",
            "              { -123, 10, -2 },\n",
            "              { 415, 10, -2 },\n",
            "              { 4938, 10, -3 },\n",
            "              { 50444, 10, -4 },\n",
            "              { -62, 10, -4 },\n",
            "              { -23121, 10, -4 },\n",
            "              { -31557, 10, -4 },\n",
            "              { -38483, 10, -4 }\n",
            "            },\n",
            "            y {\n",
            "              { -474, 10, -3 },\n",
            "              { -25168, 10, -4 },\n",
            "              { 18421, 10, -4 },\n",
            "              { -101, 10, -4 },\n",
            "              { -7149, 10, -4 },\n",
            "              { -13046, 10, -4 },\n",
            "              { -2023, 10, -4 },\n",
            "              { -1475, 10, -3 },\n",
            "              { -3907, 10, -4 },\n",
            "              { 5302, 10, -4 },\n",
            "              { 11052, 10, -4 },\n",
            "              { 4754, 10, -4 },\n",
            "              { 14306, 10, -4 },\n",
            "              { -25067, 10, -4 },\n",
            "              { -18183, 10, -4 },\n",
            "              { 6306, 10, -4 },\n",
            "              { -23492, 10, -4 },\n",
            "              { 7916, 10, -4 },\n",
            "              { 25415, 10, -4 },\n",
            "              { 17217, 10, -4 },\n",
            "              { 26936, 10, -4 },\n",
            "              { -21759, 10, -4 },\n",
            "              { -6035, 10, -4 },\n",
            "              { -20128, 10, -4 },\n",
            "              { -13335, 10, -4 },\n",
            "              { 1174, 10, -4 },\n",
            "              { 9596, 10, -4 },\n",
            "              { 1968, 10, -3 },\n",
            "              { 15205, 10, -4 },\n",
            "              { 4584, 10, -4 },\n",
            "              { -35067, 10, -4 },\n",
            "              { -17947, 10, -4 },\n",
            "              { -27505, 10, -4 },\n",
            "              { 18479, 10, -4 },\n",
            "              { 4055, 10, -4 },\n",
            "              { 7352, 10, -4 },\n",
            "              { 32824, 10, -4 },\n",
            "              { 35638, 10, -4 },\n",
            "              { -26446, 10, -4 },\n",
            "              { 10686, 10, -4 }\n",
            "            },\n",
            "            z {\n",
            "              { 12005, 10, -4 },\n",
            "              { -2218, 10, -4 },\n",
            "              { 5579, 10, -4 },\n",
            "              { 4474, 10, -4 },\n",
            "              { 6616, 10, -4 },\n",
            "              { -417, 10, -3 },\n",
            "              { -764, 10, -3 },\n",
            "              { 9848, 10, -4 },\n",
            "              { 19201, 10, -4 },\n",
            "              { 1205, 10, -4 },\n",
            "              { -13279, 10, -4 },\n",
            "              { 16126, 10, -4 },\n",
            "              { -748, 10, -3 },\n",
            "              { -924, 10, -4 },\n",
            "              { -15971, 10, -4 },\n",
            "              { 5136, 10, -4 },\n",
            "              { -14425, 10, -4 },\n",
            "              { 2084, 10, -4 },\n",
            "              { -11246, 10, -4 },\n",
            "              { 162, 10, -3 },\n",
            "              { -6541, 10, -4 },\n",
            "              { -118, 10, -4 },\n",
            "              { -15465, 10, -4 },\n",
            "              { 19373, 10, -4 },\n",
            "              { 23712, 10, -4 },\n",
            "              { 2679, 10, -3 },\n",
            "              { -24075, 10, -4 },\n",
            "              { -12194, 10, -4 },\n",
            "              { 1476, 10, -3 },\n",
            "              { 24975, 10, -4 },\n",
            "              { 2593, 10, -4 },\n",
            "              { -25831, 10, -4 },\n",
            "              { -23109, 10, -4 },\n",
            "              { 287, 10, -4 },\n",
            "              { -6472, 10, -4 },\n",
            "              { 1073, 10, -3 },\n",
            "              { -18043, 10, -4 },\n",
            "              { -9645, 10, -4 },\n",
            "              { 6672, 10, -4 },\n",
            "              { 11031, 10, -4 }\n",
            "            },\n",
            "            data {\n",
            "              {\n",
            "                urn {\n",
            '                  label "Conformer",\n',
            '                  name "ID",\n',
            "                  datatype uint64,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2009.12.11"\n',
            "                },\n",
            '                value sval "0050B37A00000001"\n',
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Energy",\n',
            '                  name "MMFF94 NoEstat",\n',
            "                  datatype double,\n",
            '                  version "1.6.0",\n',
            '                  software "Szybki",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 748429, 10, -4 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Feature",\n',
            '                  name "Self Overlap",\n',
            "                  datatype double,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 52873, 10, -3 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Fingerprint",\n',
            '                  name "Shape",\n',
            "                  datatype stringlist,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value slist {\n",
            '                  "10165383 225 18201451224619826784",\n',
            '                  "10863032 1 18271807882738128182",\n',
            '                  "10871710 139 17975427020448559044",\n',
            '                  "10948715 1 18269553840856601268",\n',
            '                  "11578080 2 17916862543033451120",\n',
            '                  "12035758 1 17979921506076134602",\n',
            '                  "12326174 3 16761939621672351259",\n',
            '                  "12403814 3 18127127700562790162",\n',
            '                  "12423570 1 13554306196661771698",\n',
            '                  "13132413 78 16832327581639147097",\n',
            '                  "13140716 1 18188786057421996321",\n',
            '                  "13172582 1 18260836951273720209",\n',
            '                  "13681431 1 17258466355483259718",\n',
            '                  "141345 1 11468367428490074574",\n',
            '                  "144361 1 17623048910753830566",\n',
            '                  "14817 1 13651070280742688743",\n',
            '                  "15852999 172 18199182901892535827",\n',
            '                  "16945 1 18189637062236146638",\n',
            '                  "17357779 13 17772166846782183447",\n',
            '                  "18393751 57 17187542376137546200",\n',
            '                  "19868273 325 18263924500288743760",\n',
            '                  "21524375 3 18267574711299526024",\n',
            '                  "22112679 90 18121790679236681172",\n',
            '                  "22182313 1 18194427527483256583",\n',
            '                  "2334 1 17972616638225251261",\n',
            '                  "23388829 49 17833828657105785732",\n',
            '                  "23402539 116 18338509850163596911",\n',
            '                  "23419403 2 15694871661581035675",\n',
            '                  "23557571 272 18270408299151999272",\n',
            '                  "23559900 14 18059580127798590934",\n',
            '                  "238 59 17618764874292193101",\n',
            '                  "2748010 2 17975155161707925181",\n',
            '                  "34934 24 18113338621838265964",\n',
            '                  "495365 180 17547829890269334821",\n',
            '                  "7364860 26 17256519721717681045",\n',
            '                  "81228 2 18194937829152466419",\n',
            '                  "84936 31 17124492616027647943"\n',
            "                }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Multipoles",\n',
            "                  datatype doublevec,\n",
            '                  version "1.8.1",\n',
            '                  software "OEShape",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fvec {\n",
            "                  { 40958, 10, -2 },\n",
            "                  { 445, 10, -2 },\n",
            "                  { 302, 10, -2 },\n",
            "                  { 155, 10, -2 },\n",
            "                  { 23, 10, -1 },\n",
            "                  { 24, 10, -2 },\n",
            "                  { -13, 10, -2 },\n",
            "                  { -16, 10, -1 },\n",
            "                  { -99, 10, -2 },\n",
            "                  { -259, 10, -2 },\n",
            "                  { 117, 10, -2 },\n",
            "                  { 46, 10, -2 },\n",
            "                  { 26, 10, -2 },\n",
            "                  { -3, 10, -2 }\n",
            "                }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Self Overlap",\n',
            "                  datatype double,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 930437, 10, -3 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Volume",\n',
            "                  datatype double,\n",
            '                  version "1.8.1",\n',
            '                  software "OEShape",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.01.18"\n',
            "                },\n",
            "                value fval { 2112, 10, -1 }\n",
            "              }\n",
            "            }\n",
            "          }\n",
            "        },\n",
            "        data {\n",
            "          {\n",
            "            urn {\n",
            '              label "Conformer",\n',
            '              name "RMSD",\n',
            "              datatype double,\n",
            '              release "2009.12.11"\n',
            "            },\n",
            "            value fval { 6, 10, -1 }\n",
            "          },\n",
            "          {\n",
            "            urn {\n",
            '              label "Diverse Conformer",\n',
            '              name "ID List",\n',
            "              datatype uintvec,\n",
            '              release "2010.05.05"\n',
            "            },\n",
            "            value ivec {\n",
            "              1\n",
            "            }\n",
            "          }\n",
            "        }\n",
            "      }\n",
            "    },\n",
            "    props {\n",
            "      {\n",
            "        urn {\n",
            '          label "Charge",\n',
            '          name "MMFF94 Partial",\n',
            "          datatype stringlist,\n",
            '          version "1.9.0",\n',
            '          software "OEChem",\n',
            '          source "openeye.com",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value slist {\n",
            '          "26",\n',
            '          "1 -0.36",\n',
            '          "10 -0.14",\n',
            '          "11 0.14",\n',
            '          "12 0.27",\n',
            '          "13 -0.14",\n',
            '          "14 0.42",\n',
            '          "15 -0.29",\n',
            '          "16 0.08",\n',
            '          "17 -0.29",\n',
            '          "18 0.27",\n',
            '          "19 -0.15",\n',
            '          "2 -0.68",\n',
            '          "20 0.08",\n',
            '          "21 -0.15",\n',
            '          "3 -0.53",\n',
            '          "32 0.15",\n',
            '          "33 0.15",\n',
            '          "37 0.15",\n',
            '          "38 0.15",\n',
            '          "39 0.4",\n',
            '          "4 -0.81",\n',
            '          "40 0.45",\n',
            '          "5 0.14",\n',
            '          "6 0.14",\n',
            '          "7 0.27",\n',
            '          "8 0.28"\n',
            "        }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Effective Rotor",\n',
            "          datatype double,\n",
            '          version "1.7.6",\n',
            '          software "OEChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2012.01.18"\n',
            "        },\n",
            "        value fval { 12, 10, -1 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Features",\n',
            '          name "Pharmacophore",\n',
            "          datatype stringlist,\n",
            '          parameters "ImplicitMillsDean merged",\n',
            '          version "1.8.3",\n',
            '          software "OEShape",\n',
            '          source "openeye.com",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value slist {\n",
            '          "10",\n',
            '          "1 1 acceptor",\n',
            '          "1 2 acceptor",\n',
            '          "1 2 donor",\n',
            '          "1 3 donor",\n',
            '          "1 4 cation",\n',
            '          "5 1 5 8 10 16 rings",\n',
            '          "6 10 13 16 19 20 21 rings",\n',
            '          "6 4 5 6 7 9 12 rings",\n',
            '          "6 5 6 7 10 11 13 rings",\n',
            '          "6 5 6 8 14 15 17 rings"\n',
            "        }\n",
            "      }\n",
            "    },\n",
            "    count {\n",
            "      heavy-atom 21,\n",
            "      atom-chiral 5,\n",
            "      atom-chiral-def 5,\n",
            "      atom-chiral-undef 0,\n",
            "      bond-chiral 0,\n",
            "      bond-chiral-def 0,\n",
            "      bond-chiral-undef 0,\n",
            "      isotope-atom 0,\n",
            "      covalent-unit 1,\n",
            "      tautomers 3\n",
            "    }\n",
            "  }\n",
            "}\n",
        ]

    @pytest.fixture
    def heme_3d_file_data(self):
        return [
            "PC-Compounds ::= {\n",
            "  {\n",
            "    id {\n",
            "      id cid 4971\n",
            "    },\n",
            "    atoms {\n",
            "      aid {\n",
            "        1,\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        6,\n",
            "        7,\n",
            "        8,\n",
            "        9,\n",
            "        10,\n",
            "        11,\n",
            "        12,\n",
            "        13,\n",
            "        14,\n",
            "        15,\n",
            "        16,\n",
            "        17,\n",
            "        18,\n",
            "        19,\n",
            "        20,\n",
            "        21,\n",
            "        22,\n",
            "        23,\n",
            "        24,\n",
            "        25,\n",
            "        26,\n",
            "        27,\n",
            "        28,\n",
            "        29,\n",
            "        30,\n",
            "        31,\n",
            "        32,\n",
            "        33,\n",
            "        34,\n",
            "        35,\n",
            "        36,\n",
            "        37,\n",
            "        38,\n",
            "        39,\n",
            "        40,\n",
            "        41,\n",
            "        42,\n",
            "        43,\n",
            "        44,\n",
            "        45,\n",
            "        46,\n",
            "        47,\n",
            "        48,\n",
            "        49,\n",
            "        50,\n",
            "        51,\n",
            "        52,\n",
            "        53,\n",
            "        54,\n",
            "        55,\n",
            "        56,\n",
            "        57,\n",
            "        58,\n",
            "        59,\n",
            "        60,\n",
            "        61,\n",
            "        62,\n",
            "        63,\n",
            "        64,\n",
            "        65,\n",
            "        66,\n",
            "        67,\n",
            "        68,\n",
            "        69,\n",
            "        70,\n",
            "        71,\n",
            "        72,\n",
            "        73,\n",
            "        74,\n",
            "        75,\n",
            "        76\n",
            "      },\n",
            "      element {\n",
            "        o,\n",
            "        o,\n",
            "        o,\n",
            "        o,\n",
            "        n,\n",
            "        n,\n",
            "        n,\n",
            "        n,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        c,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h,\n",
            "        h\n",
            "      }\n",
            "    },\n",
            "    bonds {\n",
            "      aid1 {\n",
            "        1,\n",
            "        1,\n",
            "        2,\n",
            "        2,\n",
            "        3,\n",
            "        4,\n",
            "        5,\n",
            "        5,\n",
            "        5,\n",
            "        6,\n",
            "        6,\n",
            "        6,\n",
            "        7,\n",
            "        7,\n",
            "        8,\n",
            "        8,\n",
            "        9,\n",
            "        9,\n",
            "        9,\n",
            "        10,\n",
            "        10,\n",
            "        10,\n",
            "        11,\n",
            "        12,\n",
            "        12,\n",
            "        13,\n",
            "        14,\n",
            "        14,\n",
            "        15,\n",
            "        16,\n",
            "        17,\n",
            "        17,\n",
            "        18,\n",
            "        18,\n",
            "        19,\n",
            "        19,\n",
            "        20,\n",
            "        20,\n",
            "        21,\n",
            "        21,\n",
            "        21,\n",
            "        22,\n",
            "        22,\n",
            "        22,\n",
            "        23,\n",
            "        24,\n",
            "        24,\n",
            "        25,\n",
            "        25,\n",
            "        26,\n",
            "        27,\n",
            "        28,\n",
            "        29,\n",
            "        30,\n",
            "        31,\n",
            "        31,\n",
            "        31,\n",
            "        32,\n",
            "        32,\n",
            "        32,\n",
            "        33,\n",
            "        33,\n",
            "        33,\n",
            "        34,\n",
            "        34,\n",
            "        34,\n",
            "        35,\n",
            "        35,\n",
            "        35,\n",
            "        36,\n",
            "        36,\n",
            "        36,\n",
            "        37,\n",
            "        37,\n",
            "        38,\n",
            "        38,\n",
            "        41,\n",
            "        41,\n",
            "        42,\n",
            "        42\n",
            "      },\n",
            "      aid2 {\n",
            "        39,\n",
            "        75,\n",
            "        40,\n",
            "        76,\n",
            "        39,\n",
            "        40,\n",
            "        17,\n",
            "        20,\n",
            "        50,\n",
            "        18,\n",
            "        19,\n",
            "        51,\n",
            "        11,\n",
            "        15,\n",
            "        13,\n",
            "        16,\n",
            "        11,\n",
            "        12,\n",
            "        21,\n",
            "        13,\n",
            "        14,\n",
            "        22,\n",
            "        23,\n",
            "        15,\n",
            "        31,\n",
            "        23,\n",
            "        16,\n",
            "        34,\n",
            "        28,\n",
            "        29,\n",
            "        24,\n",
            "        28,\n",
            "        25,\n",
            "        30,\n",
            "        27,\n",
            "        29,\n",
            "        26,\n",
            "        30,\n",
            "        32,\n",
            "        43,\n",
            "        44,\n",
            "        33,\n",
            "        45,\n",
            "        46,\n",
            "        47,\n",
            "        26,\n",
            "        35,\n",
            "        27,\n",
            "        36,\n",
            "        37,\n",
            "        38,\n",
            "        48,\n",
            "        49,\n",
            "        52,\n",
            "        53,\n",
            "        54,\n",
            "        55,\n",
            "        39,\n",
            "        56,\n",
            "        57,\n",
            "        40,\n",
            "        58,\n",
            "        59,\n",
            "        60,\n",
            "        61,\n",
            "        62,\n",
            "        63,\n",
            "        64,\n",
            "        65,\n",
            "        66,\n",
            "        67,\n",
            "        68,\n",
            "        41,\n",
            "        69,\n",
            "        42,\n",
            "        70,\n",
            "        71,\n",
            "        72,\n",
            "        73,\n",
            "        74\n",
            "      },\n",
            "      order {\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        double,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        double,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single,\n",
            "        single\n",
            "      }\n",
            "    },\n",
            "    coords {\n",
            "      {\n",
            "        type {\n",
            "          threed,\n",
            "          computed,\n",
            "          units-angstroms\n",
            "        },\n",
            "        aid {\n",
            "          1,\n",
            "          2,\n",
            "          3,\n",
            "          4,\n",
            "          5,\n",
            "          6,\n",
            "          7,\n",
            "          8,\n",
            "          9,\n",
            "          10,\n",
            "          11,\n",
            "          12,\n",
            "          13,\n",
            "          14,\n",
            "          15,\n",
            "          16,\n",
            "          17,\n",
            "          18,\n",
            "          19,\n",
            "          20,\n",
            "          21,\n",
            "          22,\n",
            "          23,\n",
            "          24,\n",
            "          25,\n",
            "          26,\n",
            "          27,\n",
            "          28,\n",
            "          29,\n",
            "          30,\n",
            "          31,\n",
            "          32,\n",
            "          33,\n",
            "          34,\n",
            "          35,\n",
            "          36,\n",
            "          37,\n",
            "          38,\n",
            "          39,\n",
            "          40,\n",
            "          41,\n",
            "          42,\n",
            "          43,\n",
            "          44,\n",
            "          45,\n",
            "          46,\n",
            "          47,\n",
            "          48,\n",
            "          49,\n",
            "          50,\n",
            "          51,\n",
            "          52,\n",
            "          53,\n",
            "          54,\n",
            "          55,\n",
            "          56,\n",
            "          57,\n",
            "          58,\n",
            "          59,\n",
            "          60,\n",
            "          61,\n",
            "          62,\n",
            "          63,\n",
            "          64,\n",
            "          65,\n",
            "          66,\n",
            "          67,\n",
            "          68,\n",
            "          69,\n",
            "          70,\n",
            "          71,\n",
            "          72,\n",
            "          73,\n",
            "          74,\n",
            "          75,\n",
            "          76\n",
            "        },\n",
            "        conformers {\n",
            "          {\n",
            "            x {\n",
            "              { 71385, 10, -4 },\n",
            "              { 57615, 10, -4 },\n",
            "              { 67154, 10, -4 },\n",
            "              { 61372, 10, -4 },\n",
            "              { -2525, 10, -3 },\n",
            "              { -26939, 10, -4 },\n",
            "              { 4051, 10, -4 },\n",
            "              { 1811, 10, -4 },\n",
            "              { 2507, 10, -3 },\n",
            "              { 20591, 10, -4 },\n",
            "              { 16482, 10, -4 },\n",
            "              { 16304, 10, -4 },\n",
            "              { 15429, 10, -4 },\n",
            "              { 10549, 10, -4 },\n",
            "              { 3143, 10, -4 },\n",
            "              { -1068, 10, -4 },\n",
            "              { -20505, 10, -4 },\n",
            "              { -39963, 10, -4 },\n",
            "              { -25688, 10, -4 },\n",
            "              { -37828, 10, -4 },\n",
            "              { 39475, 10, -4 },\n",
            "              { 35095, 10, -4 },\n",
            "              { 22658, 10, -4 },\n",
            "              { -30486, 10, -4 },\n",
            "              { -47892, 10, -4 },\n",
            "              { -41304, 10, -4 },\n",
            "              { -39471, 10, -4 },\n",
            "              { -7823, 10, -4 },\n",
            "              { -14551, 10, -4 },\n",
            "              { -45176, 10, -4 },\n",
            "              { 19005, 10, -4 },\n",
            "              { 4852, 10, -3 },\n",
            "              { 39112, 10, -4 },\n",
            "              { 10259, 10, -4 },\n",
            "              { -29926, 10, -4 },\n",
            "              { -62814, 10, -4 },\n",
            "              { -536, 10, -2 },\n",
            "              { -43596, 10, -4 },\n",
            "              { 63128, 10, -4 },\n",
            "              { 53729, 10, -4 },\n",
            "              { -61715, 10, -4 },\n",
            "              { -46339, 10, -4 },\n",
            "              { 41938, 10, -4 },\n",
            "              { 41687, 10, -4 },\n",
            "              { 37406, 10, -4 },\n",
            "              { 41341, 10, -4 },\n",
            "              { 33403, 10, -4 },\n",
            "              { -7083, 10, -4 },\n",
            "              { -15138, 10, -4 },\n",
            "              { -20287, 10, -4 },\n",
            "              { -19035, 10, -4 },\n",
            "              { -55979, 10, -4 },\n",
            "              { 12897, 10, -4 },\n",
            "              { 29482, 10, -4 },\n",
            "              { 16775, 10, -4 },\n",
            "              { 46712, 10, -4 },\n",
            "              { 46518, 10, -4 },\n",
            "              { 33272, 10, -4 },\n",
            "              { 37327, 10, -4 },\n",
            "              { 20137, 10, -4 },\n",
            "              { 3499, 10, -4 },\n",
            "              { 6873, 10, -4 },\n",
            "              { -35447, 10, -4 },\n",
            "              { -34318, 10, -4 },\n",
            "              { -19644, 10, -4 },\n",
            "              { -67151, 10, -4 },\n",
            "              { -661, 10, -2 },\n",
            "              { -67014, 10, -4 },\n",
            "              { -5693, 10, -3 },\n",
            "              { -44411, 10, -4 },\n",
            "              { -70854, 10, -4 },\n",
            "              { -59398, 10, -4 },\n",
            "              { -49394, 10, -4 },\n",
            "              { -45621, 10, -4 },\n",
            "              { 80834, 10, -4 },\n",
            "              { 67157, 10, -4 }\n",
            "            },\n",
            "            y {\n",
            "              { 2705, 10, -3 },\n",
            "              { -32503, 10, -4 },\n",
            "              { 21599, 10, -4 },\n",
            "              { -34886, 10, -4 },\n",
            "              { 19272, 10, -4 },\n",
            "              { -1118, 10, -3 },\n",
            "              { 1517, 10, -3 },\n",
            "              { -13404, 10, -4 },\n",
            "              { 23377, 10, -4 },\n",
            "              { -26167, 10, -4 },\n",
            "              { 12058, 10, -4 },\n",
            "              { 33517, 10, -4 },\n",
            "              { -12639, 10, -4 },\n",
            "              { -3502, 10, -3 },\n",
            "              { 2872, 10, -3 },\n",
            "              { -26087, 10, -4 },\n",
            "              { 31577, 10, -4 },\n",
            "              { -6924, 10, -4 },\n",
            "              { -24592, 10, -4 },\n",
            "              { 17074, 10, -4 },\n",
            "              { 22748, 10, -4 },\n",
            "              { -29072, 10, -4 },\n",
            "              { -1348, 10, -4 },\n",
            "              { 3753, 10, -3 },\n",
            "              { -19053, 10, -4 },\n",
            "              { 28451, 10, -4 },\n",
            "              { -29601, 10, -4 },\n",
            "              { 36329, 10, -4 },\n",
            "              { -32035, 10, -4 },\n",
            "              { 5263, 10, -4 },\n",
            "              { 47807, 10, -4 },\n",
            "              { 25394, 10, -4 },\n",
            "              { -29257, 10, -4 },\n",
            "              { -49791, 10, -4 },\n",
            "              { 51012, 10, -4 },\n",
            "              { -18735, 10, -4 },\n",
            "              { 30491, 10, -4 },\n",
            "              { -43097, 10, -4 },\n",
            "              { 24348, 10, -4 },\n",
            "              { -32588, 10, -4 },\n",
            "              { 21311, 10, -4 },\n",
            "              { -52115, 10, -4 },\n",
            "              { 13129, 10, -4 },\n",
            "              { 30159, 10, -4 },\n",
            "              { -38863, 10, -4 },\n",
            "              { -22066, 10, -4 },\n",
            "              { -1671, 10, -4 },\n",
            "              { 47057, 10, -4 },\n",
            "              { -42667, 10, -4 },\n",
            "              { 12921, 10, -4 },\n",
            "              { -5315, 10, -4 },\n",
            "              { 6383, 10, -4 },\n",
            "              { 51008, 10, -4 },\n",
            "              { 49486, 10, -4 },\n",
            "              { 54274, 10, -4 },\n",
            "              { 35474, 10, -4 },\n",
            "              { 18113, 10, -4 },\n",
            "              { -36772, 10, -4 },\n",
            "              { -19441, 10, -4 },\n",
            "              { -53942, 10, -4 },\n",
            "              { -53061, 10, -4 },\n",
            "              { -54128, 10, -4 },\n",
            "              { 58188, 10, -4 },\n",
            "              { 50997, 10, -4 },\n",
            "              { 54627, 10, -4 },\n",
            "              { -15506, 10, -4 },\n",
            "              { -11876, 10, -4 },\n",
            "              { -28571, 10, -4 },\n",
            "              { 40826, 10, -4 },\n",
            "              { -45822, 10, -4 },\n",
            "              { 24544, 10, -4 },\n",
            "              { 10737, 10, -4 },\n",
            "              { -62155, 10, -4 },\n",
            "              { -49765, 10, -4 },\n",
            "              { 26451, 10, -4 },\n",
            "              { -3456, 10, -3 }\n",
            "            },\n",
            "            z {\n",
            "              { -6711, 10, -4 },\n",
            "              { -29408, 10, -4 },\n",
            "              { 1493, 10, -3 },\n",
            "              { -7132, 10, -4 },\n",
            "              { 2862, 10, -4 },\n",
            "              { 2758, 10, -4 },\n",
            "              { 2379, 10, -4 },\n",
            "              { 4974, 10, -4 },\n",
            "              { 8711, 10, -4 },\n",
            "              { 1996, 10, -4 },\n",
            "              { 4657, 10, -4 },\n",
            "              { 8618, 10, -4 },\n",
            "              { 3342, 10, -4 },\n",
            "              { 2769, 10, -4 },\n",
            "              { 4652, 10, -4 },\n",
            "              { 4631, 10, -4 },\n",
            "              { -111, 10, -3 },\n",
            "              { 2747, 10, -4 },\n",
            "              { 54, 10, -2 },\n",
            "              { -2302, 10, -4 },\n",
            "              { 12062, 10, -4 },\n",
            "              { 57, 10, -4 },\n",
            "              { 3202, 10, -4 },\n",
            "              { -8571, 10, -4 },\n",
            "              { 5602, 10, -4 },\n",
            "              { -9341, 10, -4 },\n",
            "              { 7181, 10, -4 },\n",
            "              { 3107, 10, -4 },\n",
            "              { 6248, 10, -4 },\n",
            "              { 526, 10, -4 },\n",
            "              { 11965, 10, -4 },\n",
            "              { 33, 10, -4 },\n",
            "              { -14638, 10, -4 },\n",
            "              { 1919, 10, -4 },\n",
            "              { -14661, 10, -4 },\n",
            "              { 6439, 10, -4 },\n",
            "              { -16044, 10, -4 },\n",
            "              { 10073, 10, -4 },\n",
            "              { 3698, 10, -4 },\n",
            "              { -16419, 10, -4 },\n",
            "              { -21847, 10, -4 },\n",
            "              { 645, 10, -4 },\n",
            "              { 16711, 10, -4 },\n",
            "              { 19856, 10, -4 },\n",
            "              { 4471, 10, -4 },\n",
            "              { 5729, 10, -4 },\n",
            "              { 1855, 10, -4 },\n",
            "              { 4708, 10, -4 },\n",
            "              { 8304, 10, -4 },\n",
            "              { 8961, 10, -4 },\n",
            "              { 596, 10, -4 },\n",
            "              { 92, 10, -3 },\n",
            "              { 20471, 10, -4 },\n",
            "              { 14639, 10, -4 },\n",
            "              { 3414, 10, -4 },\n",
            "              { -3875, 10, -4 },\n",
            "              { -7907, 10, -4 },\n",
            "              { -20076, 10, -4 },\n",
            "              { -19173, 10, -4 },\n",
            "              { -29, 10, -3 },\n",
            "              { -6044, 10, -4 },\n",
            "              { 11379, 10, -4 },\n",
            "              { -8503, 10, -4 },\n",
            "              { -24692, 10, -4 },\n",
            "              { -1568, 10, -3 },\n",
            "              { -3082, 10, -4 },\n",
            "              { 14317, 10, -4 },\n",
            "              { 8758, 10, -4 },\n",
            "              { -16921, 10, -4 },\n",
            "              { 20553, 10, -4 },\n",
            "              { -26733, 10, -4 },\n",
            "              { -22183, 10, -4 },\n",
            "              { 3391, 10, -4 },\n",
            "              { -9923, 10, -4 },\n",
            "              { -4143, 10, -4 },\n",
            "              { -30389, 10, -4 }\n",
            "            },\n",
            "            data {\n",
            "              {\n",
            "                urn {\n",
            '                  label "Conformer",\n',
            '                  name "ID",\n',
            "                  datatype uint64,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2009.12.11"\n',
            "                },\n",
            '                value sval "0000136B00000001"\n',
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Energy",\n',
            '                  name "MMFF94 NoEstat",\n',
            "                  datatype double,\n",
            '                  version "1.7.2",\n',
            '                  software "Szybki",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value fval { 1132274, 10, -4 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Feature",\n',
            '                  name "Self Overlap",\n',
            "                  datatype double,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value fval { 91467, 10, -3 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Fingerprint",\n',
            '                  name "Shape",\n',
            "                  datatype stringlist,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value slist {\n",
            '                  "10190206 1 17837227974003681670",\n',
            '                  "11204353 107 18411981321871663070",\n',
            '                  "11227688 84 18272077340465287277",\n',
            '                  "11513181 2 18200582696201270198",\n',
            '                  "12645989 146 17836087049689112414",\n',
            '                  "14117953 113 18193272117098521597",\n',
            '                  "14415360 78 17829314801318578837",\n',
            '                  "14725015 67 17975403930735511203",\n',
            '                  "14747282 125 18270417013720271431",\n',
            '                  "15320467 1 18265329685113451249",\n',
            '                  "15400415 2 18120079603191075997",\n',
            '                  "15950262 2 15216139600569668141",\n',
            '                  "15968369 26 18269254804497563256",\n',
            '                  "16112460 7 18271817761242498769",\n',
            '                  "20028762 73 17839462528964120378",\n',
            '                  "20609170 92 18407757040677506604",\n',
            '                  "20775438 99 18125412290218664175",\n',
            '                  "21033648 144 18411981399492219519",\n',
            '                  "21792965 2 18335686231985395930",\n',
            '                  "22311459 1 18194965377705692746",\n',
            '                  "25223398 141 18115581702694767268",\n',
            '                  "4403749 210 18121193618807126224",\n',
            '                  "50150288 127 16844182142828248609",\n',
            '                  "5171179 24 18413392037791061314",\n',
            '                  "5265222 85 17979079602809049044",\n',
            '                  "5776283 40 18263933124382620565"\n',
            "                }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Multipoles",\n',
            "                  datatype doublevec,\n",
            '                  version "1.8.3",\n',
            '                  software "OEShape",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value fvec {\n",
            "                  { 82094, 10, -2 },\n",
            "                  { 151, 10, -1 },\n",
            "                  { 926, 10, -2 },\n",
            "                  { 144, 10, -2 },\n",
            "                  { 1, 10, 1 },\n",
            "                  { 18, 10, -1 },\n",
            "                  { 92, 10, -2 },\n",
            "                  { 13, 10, -2 },\n",
            "                  { 437, 10, -2 },\n",
            "                  { -132, 10, -2 },\n",
            "                  { 9, 10, -1 },\n",
            "                  { 8, 10, -1 },\n",
            "                  { -4, 10, -2 },\n",
            "                  { 712, 10, -2 }\n",
            "                }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Self Overlap",\n',
            "                  datatype double,\n",
            '                  version "2.1",\n',
            '                  software "PubChem",\n',
            '                  source "ncbi.nlm.nih.gov",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value fval { 1798142, 10, -3 }\n",
            "              },\n",
            "              {\n",
            "                urn {\n",
            '                  label "Shape",\n',
            '                  name "Volume",\n',
            "                  datatype double,\n",
            '                  version "1.8.3",\n',
            '                  software "OEShape",\n',
            '                  source "openeye.com",\n',
            '                  release "2012.11.26"\n',
            "                },\n",
            "                value fval { 4474, 10, -1 }\n",
            "              }\n",
            "            }\n",
            "          }\n",
            "        },\n",
            "        data {\n",
            "          {\n",
            "            urn {\n",
            '              label "Conformer",\n',
            '              name "RMSD",\n',
            "              datatype double,\n",
            '              release "2009.12.11"\n',
            "            },\n",
            "            value fval { 1, 10, 0 }\n",
            "          },\n",
            "          {\n",
            "            urn {\n",
            '              label "Diverse Conformer",\n',
            '              name "ID List",\n',
            "              datatype uintvec,\n",
            '              release "2010.05.05"\n',
            "            },\n",
            "            value ivec {\n",
            "              1,\n",
            "              4,\n",
            "              9,\n",
            "              8,\n",
            "              6,\n",
            "              7,\n",
            "              2,\n",
            "              5,\n",
            "              3\n",
            "            }\n",
            "          }\n",
            "        }\n",
            "      }\n",
            "    },\n",
            "    props {\n",
            "      {\n",
            "        urn {\n",
            '          label "Charge",\n',
            '          name "MMFF94 Partial",\n',
            "          datatype stringlist,\n",
            '          version "1.9.0",\n',
            '          software "OEChem",\n',
            '          source "openeye.com",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value slist {\n",
            '          "55",\n',
            '          "1 -0.65",\n',
            '          "10 -0.14",\n',
            '          "11 0.42",\n',
            '          "12 -0.14",\n',
            '          "13 0.17",\n',
            '          "14 -0.12",\n',
            '          "15 0.17",\n',
            '          "16 0.42",\n',
            '          "17 -0.2",\n',
            '          "18 0.1",\n',
            '          "19 0.1",\n',
            '          "2 -0.65",\n',
            '          "20 -0.2",\n',
            '          "21 0.14",\n',
            '          "22 0.14",\n',
            '          "23 -0.14",\n',
            '          "24 -0.18",\n',
            '          "25 -0.14",\n',
            '          "26 -0.05",\n',
            '          "28 -0.11",\n',
            '          "29 -0.14",\n',
            '          "3 -0.57",\n',
            '          "30 -0.11",\n',
            '          "31 0.14",\n',
            '          "32 0.06",\n',
            '          "33 0.06",\n',
            '          "34 0.14",\n',
            '          "35 0.18",\n',
            '          "36 0.14",\n',
            '          "37 -0.1",\n',
            '          "38 -0.15",\n',
            '          "39 0.66",\n',
            '          "4 -0.57",\n',
            '          "40 0.66",\n',
            '          "41 -0.3",\n',
            '          "42 -0.3",\n',
            '          "47 0.15",\n',
            '          "48 0.15",\n',
            '          "49 0.15",\n',
            '          "5 0.03",\n',
            '          "50 0.27",\n',
            '          "51 0.4",\n',
            '          "52 0.15",\n',
            '          "6 -0.6",\n',
            '          "69 0.15",\n',
            '          "7 -0.62",\n',
            '          "70 0.15",\n',
            '          "71 0.15",\n',
            '          "72 0.15",\n',
            '          "73 0.15",\n',
            '          "74 0.15",\n',
            '          "75 0.5",\n',
            '          "76 0.5",\n',
            '          "8 -0.62",\n',
            '          "9 -0.12"\n',
            "        }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Count",\n',
            '          name "Effective Rotor",\n',
            "          datatype double,\n",
            '          version "1.9.0",\n',
            '          software "OEChem",\n',
            '          source "ncbi.nlm.nih.gov",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value fval { 8, 10, 0 }\n",
            "      },\n",
            "      {\n",
            "        urn {\n",
            '          label "Features",\n',
            '          name "Pharmacophore",\n',
            "          datatype stringlist,\n",
            '          parameters "ImplicitMillsDean merged",\n',
            '          version "1.8.3",\n',
            '          software "OEShape",\n',
            '          source "openeye.com",\n',
            '          release "2012.11.26"\n',
            "        },\n",
            "        value slist {\n",
            '          "18",\n',
            '          "1 1 acceptor",\n',
            '          "1 2 acceptor",\n',
            '          "1 3 acceptor",\n',
            '          "1 4 acceptor",\n',
            '          "1 41 hydrophobe",\n',
            '          "1 42 hydrophobe",\n',
            '          "1 5 cation",\n',
            '          "1 5 donor",\n',
            '          "1 6 cation",\n',
            '          "1 6 donor",\n',
            '          "1 7 acceptor",\n',
            '          "1 8 acceptor",\n',
            '          "3 1 3 39 anion",\n',
            '          "3 2 4 40 anion",\n',
            '          "5 5 17 20 24 26 rings",\n',
            '          "5 6 18 19 25 27 rings",\n',
            '          "5 7 9 11 12 15 rings",\n',
            '          "5 8 10 13 14 16 rings"\n',
            "        }\n",
            "      }\n",
            "    },\n",
            "    count {\n",
            "      heavy-atom 42,\n",
            "      atom-chiral 0,\n",
            "      atom-chiral-def 0,\n",
            "      atom-chiral-undef 0,\n",
            "      bond-chiral 0,\n",
            "      bond-chiral-def 0,\n",
            "      bond-chiral-undef 0,\n",
            "      isotope-atom 0,\n",
            "      covalent-unit 1,\n",
            "      tautomers 6\n",
            "    }\n",
            "  }\n",
            "}\n",
        ]

    @pytest.fixture
    def acetone_2d_molecule_data(self):
        return (
            {
                1: {"element": "O", "coords": np.array([3.732, 0.75, 0.0])},
                2: {"element": "C", "coords": np.array([2.866, 0.25, 0.0])},
                3: {"element": "C", "coords": np.array([2.0, 0.75, 0.0])},
                4: {"element": "C", "coords": np.array([2.866, -0.75, 0.0])},
                5: {"element": "H", "coords": np.array([2.31, 1.2869, 0.0])},
                6: {"element": "H", "coords": np.array([1.4631, 1.06, 0.0])},
                7: {"element": "H", "coords": np.array([1.69, 0.2131, 0.0])},
                8: {"element": "H", "coords": np.array([2.246, -0.75, 0.0])},
                9: {"element": "H", "coords": np.array([2.866, -1.37, 0.0])},
                10: {"element": "H", "coords": np.array([3.486, -0.75, 0.0])},
            },
            {
                0: {"from_atom_index": 1, "to_atom_index": 2, "bond_type": 2},
                1: {"from_atom_index": 2, "to_atom_index": 3, "bond_type": 1},
                2: {"from_atom_index": 2, "to_atom_index": 4, "bond_type": 1},
                3: {"from_atom_index": 3, "to_atom_index": 5, "bond_type": 1},
                4: {"from_atom_index": 3, "to_atom_index": 6, "bond_type": 1},
                5: {"from_atom_index": 3, "to_atom_index": 7, "bond_type": 1},
                6: {"from_atom_index": 4, "to_atom_index": 8, "bond_type": 1},
                7: {"from_atom_index": 4, "to_atom_index": 9, "bond_type": 1},
                8: {"from_atom_index": 4, "to_atom_index": 10, "bond_type": 1},
            },
        )

    @pytest.fixture
    def acetone_3d_molecule_data(self):
        return (
            {
                1: {
                    "element": "O",
                    "coords": np.array([3.0000e-04, -1.3171e00, 0.0000e00]),
                },
                2: {"element": "C", "coords": np.array([0.0, -0.0872, 0.0])},
                3: {"element": "C", "coords": np.array([1.281, 0.7024, 0.0])},
                4: {"element": "C", "coords": np.array([-1.2813, 0.7019, 0.0])},
                5: {"element": "H", "coords": np.array([1.3279, 1.3235, 0.0])},
                6: {"element": "H", "coords": np.array([1.326, 1.3282, 0.0])},
                7: {"element": "H", "coords": np.array([2.1351, 0.0196, 0.0])},
                8: {"element": "H", "coords": np.array([-2.1352, 0.0187, 0.0])},
                9: {"element": "H", "coords": np.array([-1.3284, 1.323, 0.0])},
                10: {"element": "H", "coords": np.array([-1.3266, 1.3278, 0.0])},
            },
            {
                0: {"from_atom_index": 1, "to_atom_index": 2, "bond_type": 2},
                1: {"from_atom_index": 2, "to_atom_index": 3, "bond_type": 1},
                2: {"from_atom_index": 2, "to_atom_index": 4, "bond_type": 1},
                3: {"from_atom_index": 3, "to_atom_index": 5, "bond_type": 1},
                4: {"from_atom_index": 3, "to_atom_index": 6, "bond_type": 1},
                5: {"from_atom_index": 3, "to_atom_index": 7, "bond_type": 1},
                6: {"from_atom_index": 4, "to_atom_index": 8, "bond_type": 1},
                7: {"from_atom_index": 4, "to_atom_index": 9, "bond_type": 1},
                8: {"from_atom_index": 4, "to_atom_index": 10, "bond_type": 1},
            },
        )

    @pytest.fixture
    def morphine_2d_molecule_data(self):
        return (
            {
                1: {"element": "O", "coords": np.array([2.2314, 0.0528, 0.0])},
                2: {"element": "O", "coords": np.array([2.0, -2.4021, 0.0])},
                3: {"element": "O", "coords": np.array([2.0, 2.4021, 0.0])},
                4: {"element": "N", "coords": np.array([6.1607, -0.9511, 0.0])},
                5: {"element": "C", "coords": np.array([3.6897, -0.4755, 0.0])},
                6: {"element": "C", "coords": np.array([4.5133, -0.9511, 0.0])},
                7: {"element": "C", "coords": np.array([5.337, -0.4755, 0.0])},
                8: {"element": "C", "coords": np.array([2.866, -0.9511, 0.0])},
                9: {"element": "C", "coords": np.array([4.2392, 0.2219, 0.0])},
                10: {"element": "C", "coords": np.array([3.6897, 0.4755, 0.0])},
                11: {"element": "C", "coords": np.array([5.337, 0.4755, 0.0])},
                12: {"element": "C", "coords": np.array([5.5918, 0.2219, 0.0])},
                13: {"element": "C", "coords": np.array([4.5133, 0.9511, 0.0])},
                14: {"element": "C", "coords": np.array([2.866, -1.9022, 0.0])},
                15: {"element": "C", "coords": np.array([4.5133, -1.9022, 0.0])},
                16: {"element": "C", "coords": np.array([2.866, 0.9511, 0.0])},
                17: {"element": "C", "coords": np.array([3.6897, -2.3777, 0.0])},
                18: {"element": "C", "coords": np.array([6.8418, -1.6832, 0.0])},
                19: {"element": "C", "coords": np.array([4.5133, 1.9022, 0.0])},
                20: {"element": "C", "coords": np.array([2.866, 1.9022, 0.0])},
                21: {"element": "C", "coords": np.array([3.6897, 2.3777, 0.0])},
                22: {"element": "H", "coords": np.array([5.0597, -1.6022, 0.0])},
                23: {"element": "H", "coords": np.array([5.6284, -1.274, 0.0])},
                24: {"element": "H", "coords": np.array([2.0496, -1.1875, 0.0])},
                25: {"element": "H", "coords": np.array([4.376, 0.8266, 0.0])},
                26: {"element": "H", "coords": np.array([3.6795, 0.4887, 0.0])},
                27: {"element": "H", "coords": np.array([5.9476, 0.3679, 0.0])},
                28: {"element": "H", "coords": np.array([5.549, 1.0581, 0.0])},
                29: {"element": "H", "coords": np.array([6.184, 0.4057, 0.0])},
                30: {"element": "H", "coords": np.array([5.4989, 0.8349, 0.0])},
                31: {"element": "H", "coords": np.array([2.866, -2.5222, 0.0])},
                32: {"element": "H", "coords": np.array([5.0503, -2.2122, 0.0])},
                33: {"element": "H", "coords": np.array([3.6897, -2.9977, 0.0])},
                34: {"element": "H", "coords": np.array([6.3879, -2.1055, 0.0])},
                35: {"element": "H", "coords": np.array([7.2641, -2.1371, 0.0])},
                36: {"element": "H", "coords": np.array([7.2957, -1.2609, 0.0])},
                37: {"element": "H", "coords": np.array([5.0503, 2.2122, 0.0])},
                38: {"element": "H", "coords": np.array([3.6897, 2.9977, 0.0])},
                39: {"element": "H", "coords": np.array([2.0, -3.0222, 0.0])},
                40: {"element": "H", "coords": np.array([2.0, 3.0222, 0.0])},
            },
            {
                0: {"from_atom_index": 1, "to_atom_index": 8, "bond_type": 1},
                1: {"from_atom_index": 1, "to_atom_index": 16, "bond_type": 1},
                2: {"from_atom_index": 2, "to_atom_index": 14, "bond_type": 1},
                3: {"from_atom_index": 2, "to_atom_index": 39, "bond_type": 1},
                4: {"from_atom_index": 3, "to_atom_index": 20, "bond_type": 1},
                5: {"from_atom_index": 3, "to_atom_index": 40, "bond_type": 1},
                6: {"from_atom_index": 4, "to_atom_index": 7, "bond_type": 1},
                7: {"from_atom_index": 4, "to_atom_index": 12, "bond_type": 1},
                8: {"from_atom_index": 4, "to_atom_index": 18, "bond_type": 1},
                9: {"from_atom_index": 5, "to_atom_index": 6, "bond_type": 1},
                10: {"from_atom_index": 5, "to_atom_index": 8, "bond_type": 1},
                11: {"from_atom_index": 5, "to_atom_index": 9, "bond_type": 1},
                12: {"from_atom_index": 5, "to_atom_index": 10, "bond_type": 1},
                13: {"from_atom_index": 6, "to_atom_index": 7, "bond_type": 1},
                14: {"from_atom_index": 6, "to_atom_index": 15, "bond_type": 1},
                15: {"from_atom_index": 6, "to_atom_index": 22, "bond_type": 1},
                16: {"from_atom_index": 7, "to_atom_index": 11, "bond_type": 1},
                17: {"from_atom_index": 7, "to_atom_index": 23, "bond_type": 1},
                18: {"from_atom_index": 8, "to_atom_index": 14, "bond_type": 1},
                19: {"from_atom_index": 8, "to_atom_index": 24, "bond_type": 1},
                20: {"from_atom_index": 9, "to_atom_index": 12, "bond_type": 1},
                21: {"from_atom_index": 9, "to_atom_index": 25, "bond_type": 1},
                22: {"from_atom_index": 9, "to_atom_index": 26, "bond_type": 1},
                23: {"from_atom_index": 10, "to_atom_index": 13, "bond_type": 2},
                24: {"from_atom_index": 10, "to_atom_index": 16, "bond_type": 1},
                25: {"from_atom_index": 11, "to_atom_index": 13, "bond_type": 1},
                26: {"from_atom_index": 11, "to_atom_index": 27, "bond_type": 1},
                27: {"from_atom_index": 11, "to_atom_index": 28, "bond_type": 1},
                28: {"from_atom_index": 12, "to_atom_index": 29, "bond_type": 1},
                29: {"from_atom_index": 12, "to_atom_index": 30, "bond_type": 1},
                30: {"from_atom_index": 13, "to_atom_index": 19, "bond_type": 1},
                31: {"from_atom_index": 14, "to_atom_index": 17, "bond_type": 1},
                32: {"from_atom_index": 14, "to_atom_index": 31, "bond_type": 1},
                33: {"from_atom_index": 15, "to_atom_index": 17, "bond_type": 2},
                34: {"from_atom_index": 15, "to_atom_index": 32, "bond_type": 1},
                35: {"from_atom_index": 16, "to_atom_index": 20, "bond_type": 2},
                36: {"from_atom_index": 17, "to_atom_index": 33, "bond_type": 1},
                37: {"from_atom_index": 18, "to_atom_index": 34, "bond_type": 1},
                38: {"from_atom_index": 18, "to_atom_index": 35, "bond_type": 1},
                39: {"from_atom_index": 18, "to_atom_index": 36, "bond_type": 1},
                40: {"from_atom_index": 19, "to_atom_index": 21, "bond_type": 2},
                41: {"from_atom_index": 19, "to_atom_index": 37, "bond_type": 1},
                42: {"from_atom_index": 20, "to_atom_index": 21, "bond_type": 1},
                43: {"from_atom_index": 21, "to_atom_index": 38, "bond_type": 1},
            },
        )

    @pytest.fixture
    def morphine_3d_molecule_data(self):
        return (
            {
                1: {"element": "O", "coords": np.array([-1.993, -0.474, 0.0])},
                2: {"element": "O", "coords": np.array([-2.7826, -2.5168, 0.0])},
                3: {"element": "O", "coords": np.array([-3.622, 1.8421, 0.0])},
                4: {"element": "N", "coords": np.array([3.1777, -0.0101, 0.0])},
                5: {"element": "C", "coords": np.array([0.3699, -0.7149, 0.0])},
                6: {"element": "C", "coords": np.array([1.2913, -1.3046, 0.0])},
                7: {"element": "C", "coords": np.array([2.3441, -0.2023, 0.0])},
                8: {"element": "C", "coords": np.array([-0.9377, -1.475, 0.0])},
                9: {"element": "C", "coords": np.array([1.1988, -0.3907, 0.0])},
                10: {"element": "C", "coords": np.array([-0.2516, 0.5302, 0.0])},
                11: {"element": "C", "coords": np.array([1.6887, 1.1052, 0.0])},
                12: {"element": "C", "coords": np.array([2.4315, 0.4754, 0.0])},
                13: {"element": "C", "coords": np.array([0.3384, 1.4306, 0.0])},
                14: {"element": "C", "coords": np.array([-1.3631, -2.5067, 0.0])},
                15: {"element": "C", "coords": np.array([0.5066, -1.8183, 0.0])},
                16: {"element": "C", "coords": np.array([-1.5672, 0.6306, 0.0])},
                17: {"element": "C", "coords": np.array([-0.7155, -2.3492, 0.0])},
                18: {"element": "C", "coords": np.array([4.3733, 0.7916, 0.0])},
                19: {"element": "C", "coords": np.array([-0.4184, 2.5415, 0.0])},
                20: {"element": "C", "coords": np.array([-2.331, 1.7217, 0.0])},
                21: {"element": "C", "coords": np.array([-1.7382, 2.6936, 0.0])},
                22: {"element": "H", "coords": np.array([1.8278, -2.1759, 0.0])},
                23: {"element": "H", "coords": np.array([3.0029, -0.6035, 0.0])},
                24: {"element": "H", "coords": np.array([-0.8451, -2.0128, 0.0])},
                25: {"element": "H", "coords": np.array([1.5366, -1.3335, 0.0])},
                26: {"element": "H", "coords": np.array([0.5899, 0.1174, 0.0])},
                27: {"element": "H", "coords": np.array([1.5474, 0.9596, 0.0])},
                28: {"element": "H", "coords": np.array([2.353, 1.968, 0.0])},
                29: {"element": "H", "coords": np.array([2.1271, 1.5205, 0.0])},
                30: {"element": "H", "coords": np.array([3.0801, 0.4584, 0.0])},
                31: {"element": "H", "coords": np.array([-1.0772, -3.5067, 0.0])},
                32: {"element": "H", "coords": np.array([0.9601, -1.7947, 0.0])},
                33: {"element": "H", "coords": np.array([-1.23, -2.7505, 0.0])},
                34: {"element": "H", "coords": np.array([4.15, 1.8479, 0.0])},
                35: {"element": "H", "coords": np.array([4.938, 0.4055, 0.0])},
                36: {"element": "H", "coords": np.array([5.0444, 0.7352, 0.0])},
                37: {"element": "H", "coords": np.array([-0.0062, 3.2824, 0.0])},
                38: {"element": "H", "coords": np.array([-2.3121, 3.5638, 0.0])},
                39: {"element": "H", "coords": np.array([-3.1557, -2.6446, 0.0])},
                40: {"element": "H", "coords": np.array([-3.8483, 1.0686, 0.0])},
            },
            {
                0: {"from_atom_index": 1, "to_atom_index": 8, "bond_type": 1},
                1: {"from_atom_index": 1, "to_atom_index": 16, "bond_type": 1},
                2: {"from_atom_index": 2, "to_atom_index": 14, "bond_type": 1},
                3: {"from_atom_index": 2, "to_atom_index": 39, "bond_type": 1},
                4: {"from_atom_index": 3, "to_atom_index": 20, "bond_type": 1},
                5: {"from_atom_index": 3, "to_atom_index": 40, "bond_type": 1},
                6: {"from_atom_index": 4, "to_atom_index": 7, "bond_type": 1},
                7: {"from_atom_index": 4, "to_atom_index": 12, "bond_type": 1},
                8: {"from_atom_index": 4, "to_atom_index": 18, "bond_type": 1},
                9: {"from_atom_index": 5, "to_atom_index": 6, "bond_type": 1},
                10: {"from_atom_index": 5, "to_atom_index": 8, "bond_type": 1},
                11: {"from_atom_index": 5, "to_atom_index": 9, "bond_type": 1},
                12: {"from_atom_index": 5, "to_atom_index": 10, "bond_type": 1},
                13: {"from_atom_index": 6, "to_atom_index": 7, "bond_type": 1},
                14: {"from_atom_index": 6, "to_atom_index": 15, "bond_type": 1},
                15: {"from_atom_index": 6, "to_atom_index": 22, "bond_type": 1},
                16: {"from_atom_index": 7, "to_atom_index": 11, "bond_type": 1},
                17: {"from_atom_index": 7, "to_atom_index": 23, "bond_type": 1},
                18: {"from_atom_index": 8, "to_atom_index": 14, "bond_type": 1},
                19: {"from_atom_index": 8, "to_atom_index": 24, "bond_type": 1},
                20: {"from_atom_index": 9, "to_atom_index": 12, "bond_type": 1},
                21: {"from_atom_index": 9, "to_atom_index": 25, "bond_type": 1},
                22: {"from_atom_index": 9, "to_atom_index": 26, "bond_type": 1},
                23: {"from_atom_index": 10, "to_atom_index": 13, "bond_type": 2},
                24: {"from_atom_index": 10, "to_atom_index": 16, "bond_type": 1},
                25: {"from_atom_index": 11, "to_atom_index": 13, "bond_type": 1},
                26: {"from_atom_index": 11, "to_atom_index": 27, "bond_type": 1},
                27: {"from_atom_index": 11, "to_atom_index": 28, "bond_type": 1},
                28: {"from_atom_index": 12, "to_atom_index": 29, "bond_type": 1},
                29: {"from_atom_index": 12, "to_atom_index": 30, "bond_type": 1},
                30: {"from_atom_index": 13, "to_atom_index": 19, "bond_type": 1},
                31: {"from_atom_index": 14, "to_atom_index": 17, "bond_type": 1},
                32: {"from_atom_index": 14, "to_atom_index": 31, "bond_type": 1},
                33: {"from_atom_index": 15, "to_atom_index": 17, "bond_type": 2},
                34: {"from_atom_index": 15, "to_atom_index": 32, "bond_type": 1},
                35: {"from_atom_index": 16, "to_atom_index": 20, "bond_type": 2},
                36: {"from_atom_index": 17, "to_atom_index": 33, "bond_type": 1},
                37: {"from_atom_index": 18, "to_atom_index": 34, "bond_type": 1},
                38: {"from_atom_index": 18, "to_atom_index": 35, "bond_type": 1},
                39: {"from_atom_index": 18, "to_atom_index": 36, "bond_type": 1},
                40: {"from_atom_index": 19, "to_atom_index": 21, "bond_type": 2},
                41: {"from_atom_index": 19, "to_atom_index": 37, "bond_type": 1},
                42: {"from_atom_index": 20, "to_atom_index": 21, "bond_type": 1},
                43: {"from_atom_index": 21, "to_atom_index": 38, "bond_type": 1},
            },
        )

    @pytest.fixture
    def heme_3d_molecule_data(self):
        return (
            {
                1: {"element": "O", "coords": np.array([7.1385, 2.705, 0.0])},
                2: {"element": "O", "coords": np.array([5.7615, -3.2503, 0.0])},
                3: {"element": "O", "coords": np.array([6.7154, 2.1599, 0.0])},
                4: {"element": "O", "coords": np.array([6.1372, -3.4886, 0.0])},
                5: {"element": "N", "coords": np.array([-2.525, 1.9272, 0.0])},
                6: {"element": "N", "coords": np.array([-2.6939, -1.118, 0.0])},
                7: {"element": "N", "coords": np.array([0.4051, 1.517, 0.0])},
                8: {"element": "N", "coords": np.array([0.1811, -1.3404, 0.0])},
                9: {"element": "C", "coords": np.array([2.507, 2.3377, 0.0])},
                10: {"element": "C", "coords": np.array([2.0591, -2.6167, 0.0])},
                11: {"element": "C", "coords": np.array([1.6482, 1.2058, 0.0])},
                12: {"element": "C", "coords": np.array([1.6304, 3.3517, 0.0])},
                13: {"element": "C", "coords": np.array([1.5429, -1.2639, 0.0])},
                14: {"element": "C", "coords": np.array([1.0549, -3.502, 0.0])},
                15: {"element": "C", "coords": np.array([0.3143, 2.872, 0.0])},
                16: {"element": "C", "coords": np.array([-0.1068, -2.6087, 0.0])},
                17: {"element": "C", "coords": np.array([-2.0505, 3.1577, 0.0])},
                18: {"element": "C", "coords": np.array([-3.9963, -0.6924, 0.0])},
                19: {"element": "C", "coords": np.array([-2.5688, -2.4592, 0.0])},
                20: {"element": "C", "coords": np.array([-3.7828, 1.7074, 0.0])},
                21: {"element": "C", "coords": np.array([3.9475, 2.2748, 0.0])},
                22: {"element": "C", "coords": np.array([3.5095, -2.9072, 0.0])},
                23: {"element": "C", "coords": np.array([2.2658, -0.1348, 0.0])},
                24: {"element": "C", "coords": np.array([-3.0486, 3.753, 0.0])},
                25: {"element": "C", "coords": np.array([-4.7892, -1.9053, 0.0])},
                26: {"element": "C", "coords": np.array([-4.1304, 2.8451, 0.0])},
                27: {"element": "C", "coords": np.array([-3.9471, -2.9601, 0.0])},
                28: {"element": "C", "coords": np.array([-0.7823, 3.6329, 0.0])},
                29: {"element": "C", "coords": np.array([-1.4551, -3.2035, 0.0])},
                30: {"element": "C", "coords": np.array([-4.5176, 0.5263, 0.0])},
                31: {"element": "C", "coords": np.array([1.9005, 4.7807, 0.0])},
                32: {"element": "C", "coords": np.array([4.852, 2.5394, 0.0])},
                33: {"element": "C", "coords": np.array([3.9112, -2.9257, 0.0])},
                34: {"element": "C", "coords": np.array([1.0259, -4.9791, 0.0])},
                35: {"element": "C", "coords": np.array([-2.9926, 5.1012, 0.0])},
                36: {"element": "C", "coords": np.array([-6.2814, -1.8735, 0.0])},
                37: {"element": "C", "coords": np.array([-5.36, 3.0491, 0.0])},
                38: {"element": "C", "coords": np.array([-4.3596, -4.3097, 0.0])},
                39: {"element": "C", "coords": np.array([6.3128, 2.4348, 0.0])},
                40: {"element": "C", "coords": np.array([5.3729, -3.2588, 0.0])},
                41: {"element": "C", "coords": np.array([-6.1715, 2.1311, 0.0])},
                42: {"element": "C", "coords": np.array([-4.6339, -5.2115, 0.0])},
                43: {"element": "H", "coords": np.array([4.1938, 1.3129, 0.0])},
                44: {"element": "H", "coords": np.array([4.1687, 3.0159, 0.0])},
                45: {"element": "H", "coords": np.array([3.7406, -3.8863, 0.0])},
                46: {"element": "H", "coords": np.array([4.1341, -2.2066, 0.0])},
                47: {"element": "H", "coords": np.array([3.3403, -0.1671, 0.0])},
                48: {"element": "H", "coords": np.array([-0.7083, 4.7057, 0.0])},
                49: {"element": "H", "coords": np.array([-1.5138, -4.2667, 0.0])},
                50: {"element": "H", "coords": np.array([-2.0287, 1.2921, 0.0])},
                51: {"element": "H", "coords": np.array([-1.9035, -0.5315, 0.0])},
                52: {"element": "H", "coords": np.array([-5.5979, 0.6383, 0.0])},
                53: {"element": "H", "coords": np.array([1.2897, 5.1008, 0.0])},
                54: {"element": "H", "coords": np.array([2.9482, 4.9486, 0.0])},
                55: {"element": "H", "coords": np.array([1.6775, 5.4274, 0.0])},
                56: {"element": "H", "coords": np.array([4.6712, 3.5474, 0.0])},
                57: {"element": "H", "coords": np.array([4.6518, 1.8113, 0.0])},
                58: {"element": "H", "coords": np.array([3.3272, -3.6772, 0.0])},
                59: {"element": "H", "coords": np.array([3.7327, -1.9441, 0.0])},
                60: {"element": "H", "coords": np.array([2.0137, -5.3942, 0.0])},
                61: {"element": "H", "coords": np.array([0.3499, -5.3061, 0.0])},
                62: {"element": "H", "coords": np.array([0.6873, -5.4128, 0.0])},
                63: {"element": "H", "coords": np.array([-3.5447, 5.8188, 0.0])},
                64: {"element": "H", "coords": np.array([-3.4318, 5.0997, 0.0])},
                65: {"element": "H", "coords": np.array([-1.9644, 5.4627, 0.0])},
                66: {"element": "H", "coords": np.array([-6.7151, -1.5506, 0.0])},
                67: {"element": "H", "coords": np.array([-6.61, -1.1876, 0.0])},
                68: {"element": "H", "coords": np.array([-6.7014, -2.8571, 0.0])},
                69: {"element": "H", "coords": np.array([-5.693, 4.0826, 0.0])},
                70: {"element": "H", "coords": np.array([-4.4411, -4.5822, 0.0])},
                71: {"element": "H", "coords": np.array([-7.0854, 2.4544, 0.0])},
                72: {"element": "H", "coords": np.array([-5.9398, 1.0737, 0.0])},
                73: {"element": "H", "coords": np.array([-4.9394, -6.2155, 0.0])},
                74: {"element": "H", "coords": np.array([-4.5621, -4.9765, 0.0])},
                75: {"element": "H", "coords": np.array([8.0834, 2.6451, 0.0])},
                76: {"element": "H", "coords": np.array([6.7157, -3.456, 0.0])},
            },
            {
                0: {"from_atom_index": 1, "to_atom_index": 39, "bond_type": 1},
                1: {"from_atom_index": 1, "to_atom_index": 75, "bond_type": 1},
                2: {"from_atom_index": 2, "to_atom_index": 40, "bond_type": 1},
                3: {"from_atom_index": 2, "to_atom_index": 76, "bond_type": 1},
                4: {"from_atom_index": 3, "to_atom_index": 39, "bond_type": 2},
                5: {"from_atom_index": 4, "to_atom_index": 40, "bond_type": 2},
                6: {"from_atom_index": 5, "to_atom_index": 17, "bond_type": 1},
                7: {"from_atom_index": 5, "to_atom_index": 20, "bond_type": 1},
                8: {"from_atom_index": 5, "to_atom_index": 50, "bond_type": 1},
                9: {"from_atom_index": 6, "to_atom_index": 18, "bond_type": 1},
                10: {"from_atom_index": 6, "to_atom_index": 19, "bond_type": 1},
                11: {"from_atom_index": 6, "to_atom_index": 51, "bond_type": 1},
                12: {"from_atom_index": 7, "to_atom_index": 11, "bond_type": 2},
                13: {"from_atom_index": 7, "to_atom_index": 15, "bond_type": 1},
                14: {"from_atom_index": 8, "to_atom_index": 13, "bond_type": 1},
                15: {"from_atom_index": 8, "to_atom_index": 16, "bond_type": 2},
                16: {"from_atom_index": 9, "to_atom_index": 11, "bond_type": 1},
                17: {"from_atom_index": 9, "to_atom_index": 12, "bond_type": 2},
                18: {"from_atom_index": 9, "to_atom_index": 21, "bond_type": 1},
                19: {"from_atom_index": 10, "to_atom_index": 13, "bond_type": 1},
                20: {"from_atom_index": 10, "to_atom_index": 14, "bond_type": 2},
                21: {"from_atom_index": 10, "to_atom_index": 22, "bond_type": 1},
                22: {"from_atom_index": 11, "to_atom_index": 23, "bond_type": 1},
                23: {"from_atom_index": 12, "to_atom_index": 15, "bond_type": 1},
                24: {"from_atom_index": 12, "to_atom_index": 31, "bond_type": 1},
                25: {"from_atom_index": 13, "to_atom_index": 23, "bond_type": 2},
                26: {"from_atom_index": 14, "to_atom_index": 16, "bond_type": 1},
                27: {"from_atom_index": 14, "to_atom_index": 34, "bond_type": 1},
                28: {"from_atom_index": 15, "to_atom_index": 28, "bond_type": 2},
                29: {"from_atom_index": 16, "to_atom_index": 29, "bond_type": 1},
                30: {"from_atom_index": 17, "to_atom_index": 24, "bond_type": 2},
                31: {"from_atom_index": 17, "to_atom_index": 28, "bond_type": 1},
                32: {"from_atom_index": 18, "to_atom_index": 25, "bond_type": 1},
                33: {"from_atom_index": 18, "to_atom_index": 30, "bond_type": 2},
                34: {"from_atom_index": 19, "to_atom_index": 27, "bond_type": 1},
                35: {"from_atom_index": 19, "to_atom_index": 29, "bond_type": 2},
                36: {"from_atom_index": 20, "to_atom_index": 26, "bond_type": 2},
                37: {"from_atom_index": 20, "to_atom_index": 30, "bond_type": 1},
                38: {"from_atom_index": 21, "to_atom_index": 32, "bond_type": 1},
                39: {"from_atom_index": 21, "to_atom_index": 43, "bond_type": 1},
                40: {"from_atom_index": 21, "to_atom_index": 44, "bond_type": 1},
                41: {"from_atom_index": 22, "to_atom_index": 33, "bond_type": 1},
                42: {"from_atom_index": 22, "to_atom_index": 45, "bond_type": 1},
                43: {"from_atom_index": 22, "to_atom_index": 46, "bond_type": 1},
                44: {"from_atom_index": 23, "to_atom_index": 47, "bond_type": 1},
                45: {"from_atom_index": 24, "to_atom_index": 26, "bond_type": 1},
                46: {"from_atom_index": 24, "to_atom_index": 35, "bond_type": 1},
                47: {"from_atom_index": 25, "to_atom_index": 27, "bond_type": 2},
                48: {"from_atom_index": 25, "to_atom_index": 36, "bond_type": 1},
                49: {"from_atom_index": 26, "to_atom_index": 37, "bond_type": 1},
                50: {"from_atom_index": 27, "to_atom_index": 38, "bond_type": 1},
                51: {"from_atom_index": 28, "to_atom_index": 48, "bond_type": 1},
                52: {"from_atom_index": 29, "to_atom_index": 49, "bond_type": 1},
                53: {"from_atom_index": 30, "to_atom_index": 52, "bond_type": 1},
                54: {"from_atom_index": 31, "to_atom_index": 53, "bond_type": 1},
                55: {"from_atom_index": 31, "to_atom_index": 54, "bond_type": 1},
                56: {"from_atom_index": 31, "to_atom_index": 55, "bond_type": 1},
                57: {"from_atom_index": 32, "to_atom_index": 39, "bond_type": 1},
                58: {"from_atom_index": 32, "to_atom_index": 56, "bond_type": 1},
                59: {"from_atom_index": 32, "to_atom_index": 57, "bond_type": 1},
                60: {"from_atom_index": 33, "to_atom_index": 40, "bond_type": 1},
                61: {"from_atom_index": 33, "to_atom_index": 58, "bond_type": 1},
                62: {"from_atom_index": 33, "to_atom_index": 59, "bond_type": 1},
                63: {"from_atom_index": 34, "to_atom_index": 60, "bond_type": 1},
                64: {"from_atom_index": 34, "to_atom_index": 61, "bond_type": 1},
                65: {"from_atom_index": 34, "to_atom_index": 62, "bond_type": 1},
                66: {"from_atom_index": 35, "to_atom_index": 63, "bond_type": 1},
                67: {"from_atom_index": 35, "to_atom_index": 64, "bond_type": 1},
                68: {"from_atom_index": 35, "to_atom_index": 65, "bond_type": 1},
                69: {"from_atom_index": 36, "to_atom_index": 66, "bond_type": 1},
                70: {"from_atom_index": 36, "to_atom_index": 67, "bond_type": 1},
                71: {"from_atom_index": 36, "to_atom_index": 68, "bond_type": 1},
                72: {"from_atom_index": 37, "to_atom_index": 41, "bond_type": 2},
                73: {"from_atom_index": 37, "to_atom_index": 69, "bond_type": 1},
                74: {"from_atom_index": 38, "to_atom_index": 42, "bond_type": 2},
                75: {"from_atom_index": 38, "to_atom_index": 70, "bond_type": 1},
                76: {"from_atom_index": 41, "to_atom_index": 71, "bond_type": 1},
                77: {"from_atom_index": 41, "to_atom_index": 72, "bond_type": 1},
                78: {"from_atom_index": 42, "to_atom_index": 73, "bond_type": 1},
                79: {"from_atom_index": 42, "to_atom_index": 74, "bond_type": 1},
            },
        )
